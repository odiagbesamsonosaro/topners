{"version":3,"sources":["components/auth/signup.js","store/actions/inputActions.js","store/actions/validationActins.js","components/auth/login.js","components/auth/resetpassword.js","components/layout/signoutlinks.js","components/layout/navigation.js","App.js","serviceWorker.js","store/reducers/inputReducer.js","store/reducers/validationReducer.js","store/index.js","index.js"],"names":["Signup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","validateField","e","_e$target","target","id","value","props","signupInputAction","signupInputValidation","_e$target2","_this$props","signup_input_data","validation","name","email","username","password","bank","account_number","confirm_password","validName","validEmail","validUsername","validPassword","validBank","validAccount","validConfirmPassword","validField","console","log","validform","includes","react_default","a","createElement","className","htmlFor","type","concat","placeholder","required","onChange","onBlur","disabled","Component","connect","state","input","signup","dispatch","data","payload","getState","valid","feedback","test","objectSpread","index","signupValidation","Login","loginInputAction","login_input_data","react_router_dom","to","login","ResetPassword","passwordResetInputAction","resetpassword_input_data","resetpassword","SignedOutLinks","Fragment","activeClassName","exact","Navigation","_ref","objectDestructuringEmpty","href","signoutlinks","App","navigation","react_router","path","component","Boolean","window","location","hostname","match","initState","inputReducer","arguments","length","undefined","action","defineProperty","validationReducer","_objectSpread2","checkFields","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0103e5e0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupInputAction } from \"../../store/actions/inputActions\";\nimport { signupValidation } from \"../../store/actions/validationActins\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.signupInputAction({ id, value });\n    this.props.signupInputValidation({ id, value });\n  }\n\n  validateField(e) {\n    const { id, value } = e.target;\n    this.props.signupInputValidation({ id, value });\n  }\n\n  render() {\n    const { signup_input_data, validation } = this.props;\n    const {\n      name,\n      email,\n      username,\n      password,\n      bank,\n      account_number,\n      confirm_password\n    } = signup_input_data;\n    const {\n      name: validName,\n      email: validEmail,\n      username: validUsername,\n      password: validPassword,\n      bank: validBank,\n      account_number: validAccount,\n      confirm_password: validConfirmPassword,\n      validField\n    } = validation;\n\n    console.log(validField);\n\n    const validform = validField.includes(false);\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Sign up</h2>\n        <form>\n          <div>\n            <label htmlFor=\"name\">Firstname</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validName ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Name\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              id=\"email\"\n              required\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validUsername ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Username\"\n              id=\"username\"\n              required\n              value={username}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"bank\">Bank Name</label>\n            <select\n              id=\"bank\"\n              className={`tp-input-field ${\n                validBank ? \"\" : \"tp-invalid-field\"\n              }`}\n              required\n              value={bank}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            >\n              <option disabled>Select your bank</option>\n              <option>Firstbank</option>\n              <option>UBA</option>\n              <option>Access Bank</option>\n              <option>Polaris Bank</option>\n              <option>Fidelity Bank</option>\n              <option>GTB</option>\n              <option>Eco Bank</option>\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"account_number\">Account Number</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validAccount ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Account Number\"\n              id=\"account_number\"\n              required\n              value={account_number}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Password\"\n              id=\"password\"\n              required\n              value={password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validConfirmPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Confirm Password\"\n              id=\"confirm_password\"\n              required\n              value={confirm_password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={validform}>\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signup_input_data: state.input.signup,\n    validation: state.validation.signup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupInputAction: data => {\n      dispatch(signupInputAction(data));\n    },\n    signupInputValidation: data => {\n      dispatch(signupValidation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","export const signupInputAction = data => {\n  return { type: \"SIGNUP_INPUT\", payload: data };\n};\n\nexport const loginInputAction = data => {\n  return { type: \"LOGIN_INPUT\", payload: data };\n};\n\nexport const passwordResetInputAction = data => {\n  return { type: \"PASSWORD_RESET_INPUT\", payload: data };\n};\n","export const signupValidation = data => {\n  return (dispatch, getState) => {\n    const { id, value } = data;\n    let valid;\n    // declare regular expressions for fields\n    let feedback = { type: \"SIGNUP-VALIDATION\", payload: { id, valid: null } };\n    //\n    let usernameRegex = /^[a-z0-9-_A-Z]{6,30}$/;\n    let accountNumberRegex = /^[0-9]{10}$/;\n    let nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;\n    let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/;\n    let banks = [\n      \"Firstbank\",\n      \"GTB\",\n      \"Polaris Bank\",\n      \"Access Bank\",\n      \"UBA\",\n      \"Fidelity Bank\",\n      \"Eco Bank\"\n    ];\n    switch (id) {\n      case \"name\":\n        valid = nameRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 0 } };\n        break;\n      case \"email\":\n        valid = emailRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 1 } };\n        break;\n      case \"password\":\n        valid = passwordRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 5 } };\n        break;\n      case \"bank\":\n        valid = banks.includes(value);\n        feedback = { ...feedback, payload: { id, valid, index: 3 } };\n        break;\n      case \"account_number\":\n        valid = accountNumberRegex.test(value);\n        console.log(valid);\n        feedback = { ...feedback, payload: { id, valid, index: 4 } };\n        break;\n      case \"confirm_password\":\n        let password = getState().input.signup.password;\n        valid = value === password;\n        feedback = { ...feedback, payload: { id, valid, index: 6 } };\n        break;\n      case \"username\":\n        console.log(value);\n        valid = usernameRegex.test(value);\n        let payload = { id, valid, index: 2 };\n        feedback = { ...feedback, payload };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(feedback);\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginInputAction } from \"../../store/actions/inputActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.loginInputAction({ id, value });\n  }\n\n  render() {\n    const { login_input_data } = this.props;\n    const { email, password } = login_input_data;\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Login</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              required\n              className=\"tp-input-field\"\n              value={email}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              required\n              className=\"tp-input-field\"\n              value={password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\">Log in</button>\n          </div>\n          <div>\n            <p>\n              <Link to=\"/auth/password-reset\" className=\"tp-forgot-password\">\n                Forgot Password\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    login_input_data: state.input.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginInputAction: data => {\n      dispatch(loginInputAction(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { passwordResetInputAction } from \"../../store/actions/inputActions\";\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.passwordResetInputAction({ id, value });\n  }\n  render() {\n    const { resetpassword_input_data } = this.props;\n    const { email } = resetpassword_input_data;\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Password Reset</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              id=\"email\"\n              required\n              className=\"tp-input-field\"\n              value={email}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\">Send reset link</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    resetpassword_input_data: state.input.resetpassword\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    passwordResetInputAction: data => {\n      dispatch(passwordResetInputAction(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/login\">\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/signup\">\n          Signup\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport SignoutLinks from \"./signoutlinks\";\n\nconst Navigation = ({}) => {\n  return (\n    <nav className=\"tp-navigation\">\n      <a href=\"#default\" className=\"tp-brand\">\n        Topners\n      </a>\n      <ul>{true ? <SignoutLinks /> : \"\"}</ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/signup\";\nimport Login from \"./components/auth/login\";\nimport ResetPassword from \"./components/auth/resetpassword\";\nimport Navigation from \"./components/layout/navigation\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation />\n        <Switch>\n          <Route path=\"/auth/signup\" exact component={Signup} />\n          <Route path=\"/auth/login\" exact component={Login} />\n\n          <Route path=\"/auth/password-reset\" exact component={ResetPassword} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  login: {\n    email: \"\",\n    password: \"\"\n  },\n  resetpassword: {\n    email: \"\"\n  },\n\n  signup: {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    bank: \"\",\n    account_number: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  }\n};\n\nconst inputReducer = (state = initState, action) => {\n  const { id, value } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"LOGIN_INPUT\":\n      let login = { ...state.login, [id]: value };\n      state = { ...state, login };\n      break;\n    case \"SIGNUP_INPUT\":\n      let signup = { ...state.signup, [id]: value };\n      state = { ...state, signup };\n      break;\n    case \"PASSWORD_RESET_INPUT\":\n      let resetpassword = { ...state.resetpassword, [id]: value };\n      state = { ...state, resetpassword };\n      break;\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default inputReducer;\n","const initState = {\n  signup: {\n    name: true,\n    email: true,\n    password: true,\n    bank: true,\n    account_number: true,\n    confirm_password: true,\n    username: true,\n    validField: [false, false, false, false, false, false, false]\n  }\n};\n\nconst validationReducer = (state = initState, action) => {\n  const { id, valid, index } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"SIGNUP-VALIDATION\":\n      let checkFields = state.signup.validField;\n      checkFields[index] = valid;\n      let signup = {\n        ...state.signup,\n        [id]: valid,\n        validField: checkFields\n      };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-VALIDATION\":\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default validationReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./reducers/inputReducer\";\nimport validationReducer from \"./reducers/validationReducer\";\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  validation: validationReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/index\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}