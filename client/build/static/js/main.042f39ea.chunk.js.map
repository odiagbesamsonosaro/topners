{"version":3,"sources":["store/actions/componentActions.js","config/config.js","store/actions/authActions.js","helpers/validationRegex.js","helpers/className.js","components/auth/signup.js","store/actions/inputActions.js","store/actions/validationActins.js","components/auth/login.js","components/auth/resetpassword.js","components/layout/signoutlinks.js","components/layout/signinlinks.js","components/layout/navigation.js","components/layout/question.js","components/layout/howitworks.js","io/actions.js","store/actions/gameAction.js","components/User/currentWinners.js","components/User/dashboard.js","components/layout/loading.js","components/layout/iolistener.js","components/comps/loader.js","components/layout/banks.js","components/User/profile.js","components/auth/verify.js","components/auth/newpassword.js","components/User/withdraw.js","components/User/verifypayment.js","App.js","serviceWorker.js","store/reducers/inputReducer.js","store/reducers/validationReducer.js","store/reducers/errorReducer.js","store/reducers/authReducer.js","store/reducers/componentsReducer.js","store/reducers/gameReducer.js","store/index.js","io/index.js","index.js"],"names":["doingAsync","done","type","payload","URL","url","concat","setActiveUser","user","updateUserProfile","data","dispatch","getState","axios","post","withCredentials","then","response","_response$data","error","message","toast","className","catch","err","validationRegex","usernameRegex","accountNumberRegex","nameRegex","emailRegex","passwordRegex","bankNames","Signup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleInputChange","bind","assertThisInitialized","_createUserAccount","_formValidation","state","input","email","name","password","confirm_password","username","errors","e","_e$target","target","id","value","objectSpread","defineProperty","setState","fieldToValidate","callback","arguments","length","undefined","allFields","validateField","_","get","regexp","regex","test","passwordValue","each","field","fieldValidate","isValid","_this2","preventDefault","props","createUserAccount","auth","_this$state$input","emailError","nameError","passwordError","confirmError","usernameError","react_default","a","createElement","react_router","to","onSubmit","noValidate","ErrorClassName","htmlFor","placeholder","required","onChange","Component","connect","signup_input_data","signup","validation","signingup","components","signupInputAction","signupInputValidation","valid","feedback","index","includes","signupValidation","res","_res$data","success","delay","Login","handleInputChange","_logUserIn","loguserin","onBlur","react_router_dom","login","loginInputAction","loginValidation","_ref","asyncToGenerator","regenerator_default","mark","_callee","_res$data2","wrap","_context","prev","next","jwt","stop","_x","apply","console","log","logUserIn","ResetPassword","_requestPasswordReset","fieldsToValidate","requestPasswordReset","errorClassName","_response$data3","SignedOutLinks","Fragment","activeClassName","exact","dropdown","dropdownopen","loguserout","openDropdown","onClick","href","Navigation","link","signinlinks","signoutlinks","Question","question","submitAnswer","blockedout","options_","option","map","ind","key","style","color","Howitworks","actions","_actions","signupforgame","setuser","submitanswer","getgameobject","setgameobject","blockout","youwin","totalwinnersreached","wronganswer","setGameObject","verifyUserPaymentAndUpdateUserBalance","reference","_response$data4","CurrentWinners","currentWinners","possibleWinners","Dashboard","signUpForGame","signupForGame","checked","getGameObject","_this$props","game","account_balance","account_number","bank","signupForNextGameShow","theGame","correct","wrong","_ref2","gameison","pricepool","toFixed","User_currentWinners","layout_question","label","howitworks","answer","Socket","answerToQuestion","checkanswer","_response$data2","emit","Loader","newuserjoined","paymentsuccessful","paymenterror","modify","resetuser","Io","redirect","configure","autoClose","on","isActive","dismiss","toastId","TYPE","INFO","resetUser","Banks","userBank","render","sort","disabled","UpdateProfile","requestVerification","indexOf","verified","userAccountNumber","_this$state$errors","bankErr","accountError","textDecoration","layout_banks","input_data","updateProfile","updateProfileInputAction","_response$data5","Verify","verifyAccount","match","params","NewPassword","_resetPassword","_this$props$match$par","token","validateResetToken","pErr","cpErr","Withdraw","number","_requestWithdrawal","requestWithdrawal","_this$state","validAmount","colors","paddingTop","paddingBottom","marginBottom","min","max","amount","VerifyPayment","query","location","search","queryString","parse","verifyPaymentAndUpdateUserBalance","loading","socket","layout_loading","react_toastify","navigation","loader","path","component","dashboard","assign","profile","iolistener","Boolean","window","hostname","initState","resetpassword","inputReducer","action","validField","validfield","passwordreset","validationReducer","_objectSpread2","checkFields","errorReducer","authReducer","usr","logingin","notification","componentReducer","drop","gameReducer","rootReducer","combineReducers","IO","store","createStore","applyMiddleware","thunk","_res$data3","localStorage","setItem","JSON","stringify","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.042f39ea.chunk.js","sourcesContent":["export const logingin = value => {\n  console.log(\"loggin in \", value);\n  return {\n    type: \"LOGING-IN-COMP\",\n    payload: value\n  };\n};\n\nexport const signingup = value => {\n  return {\n    type: \"SIGNING-UP-COMP\",\n    payload: value\n  };\n};\n\nexport const openDropDown = () => {\n  console.log(\"opening drop down action \");\n  return {\n    type: \"DROP-COMP\",\n    payload: null\n  };\n};\n\nexport const notify = (dispatch, data, state) => {\n  const c = data.c ? \"green\" : \"red\";\n  data.c = c;\n  const notification = state().components.notification;\n  if (notification) {\n    dispatch({ type: \"NOTIFICATION\", payload: null });\n  }\n  dispatch({ type: \"NOTIFICATION\", payload: data });\n\n  setTimeout(() => {\n    dispatch({ type: \"NOTIFICATION\", payload: null });\n  }, 4500);\n};\n\nexport const doingAsync = done => {\n  return {\n    type: \"DOING-ASYNC\",\n    payload: done\n  };\n};\n","export const URL = \"https://topner.herokuapp.com\";\n","import axios from \"axios\";\nimport { doingAsync } from \"../actions/componentActions\";\nimport * as jwt from \"jsonwebtoken\";\nimport { toast } from \"react-toastify\";\nimport { URL } from \"../../config/config\";\n\nconst url = `${URL}/`;\n\nexport const createUserAccount = data => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    axios\n      .post(`${url}auth/signup`, data, { withCredentials: true })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"SIGNUP-ERROR\",\n            payload: { error: error.message, success: null }\n          });\n          dispatch(doingAsync(false));\n          toast(error.message, {\n            delay: 50,\n            className: \"tp-toast-error\"\n          });\n        } else {\n          dispatch({\n            type: \"SIGNUP-SUCCESS\",\n            payload: { error: null, success: success.message }\n          });\n          dispatch(doingAsync(false));\n          toast(\"Account created successfully, you can login now\", {\n            delay: 50,\n            className: \"tp-toast-success\"\n          });\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: \"SIGNUP-ERROR\",\n          payload: err.message\n        });\n\n        dispatch(doingAsync(false));\n        toast(err.message, {\n          delay: 50,\n          className: \"tp-toast-error\"\n        });\n      });\n  };\n};\n\nexport const logUserIn = data => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    axios\n      .post(`${url}auth/login`, data, { withCredentials: true })\n      .then(async res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"LOGIN-ERROR\",\n            payload: { error }\n          });\n          dispatch(doingAsync(false));\n          toast(\"Invalid credentials provided\", {\n            delay: 50,\n            className: \"tp-toast-error\"\n          });\n        } else {\n          const user = jwt.verify(\n            success.auth,\n            \"posiedonathenazeuskratoshydra\"\n          );\n          const { auth } = user;\n          dispatch(setActiveUser(auth));\n          dispatch(doingAsync(false));\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({\n          type: \"LOGIN-ERROR\",\n          payload: { error: \"Invalid credentials provided\" }\n        });\n        dispatch(doingAsync(false));\n        toast(err.message, {\n          delay: 50,\n          className: \"tp-toast-error\"\n        });\n      });\n  };\n};\n\nexport const verifyAuthentication = () => {\n  return dispatch => {\n    dispatch(doingAsync(true));\n    axios\n      .get(`${url}auth/verify_authentication`, {\n        withCredentials: true\n      })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false }\n          });\n          dispatch(doingAsync(false));\n        } else {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false }\n          });\n          dispatch(doingAsync(false));\n          dispatch(setActiveUser(success.auth));\n          localStorage.setItem(\n            \"user\",\n            JSON.stringify({ ...success.auth, password: null })\n          );\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: \"AUTHENTICATION-END\",\n          payload: { loading: false }\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch(doingAsync(true));\n    axios\n      .post(`${url}auth/logout`, {}, { withCredentials: true })\n      .then(res => {\n        const { error } = res.data;\n        if (error) {\n          dispatch(doingAsync(false));\n        } else {\n          dispatch(setActiveUser(null));\n          dispatch(doingAsync(false));\n        }\n      })\n      .catch(err => {\n        dispatch(doingAsync(true));\n      });\n  };\n};\n\nexport const setActiveUser = user => {\n  return {\n    type: \"SET-ACTIVE-USER\",\n    payload: { user }\n  };\n};\n\nexport const updateUserProfile = data => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    axios\n      .post(\n        `${url}auth/profile/update`,\n        { data: data },\n        { withCredentials: true }\n      )\n      .then(response => {\n        const { error, message, user } = response.data;\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          dispatch(setActiveUser(user));\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, {\n          className: \"tp-toast-error\"\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const verifyAccount = data => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    axios\n      .post(`${url}auth/account/verify`, { data }, { withCredentials: true })\n      .then(response => {\n        const { error, message, user } = response.data;\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          dispatch(setActiveUser(user));\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, {\n          className: \"tp-toast-error\"\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const requestPasswordReset = email => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    axios\n      .post(`${url}auth/account/password_reset`, { email })\n      .then(response => {\n        const { error, message } = response.data;\n\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, {\n          className: \"tp-toast-error\"\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const validateResetToken = data => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    axios\n      .post(`${url}auth/account/reset/validate`, { data })\n      .then(response => {\n        const { error, message } = response.data;\n\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, {\n          className: \"tp-toast-error\"\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const requestVerification = () => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    axios\n      .post(\n        `${url}auth/account/sendverification`,\n        {},\n        { withCredentials: true }\n      )\n      .then(response => {\n        const { error, message } = response.data;\n\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, {\n          className: \"tp-toast-error\"\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n","export default {\n  usernameRegex: /^[a-z0-9-_A-Z]{6,30}$/,\n  accountNumberRegex: /^[0-9]{10}$/,\n  nameRegex: /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/,\n  emailRegex: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n  passwordRegex: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/,\n  bankNames: [\n    \"Access Bank Plc\",\n    \"Fidelity Bank Plc\",\n    \"First City Monument Bank Plc (FCMB)\",\n    \"First Bank of Nigeria Limited\",\n    \"Guaranty Trust Bank Plc\",\n    \"Union Bank of Nigeria Plc\",\n    \"United Bank of Africa Plc (UBA)\",\n    \"Zenith Bank Plc\",\n    \"Ecobank Nigeria Plc\",\n    \"Heritage Banking Company Limited\",\n    \"Keystone Bank Limited\",\n    \"Polaris Bank Limited\",\n    \"Stanbic IBTC Bank Plc\",\n    \"Standard Chartered\",\n    \"Sterling Bank Plc\",\n    \"Wema Bank Plc\"\n  ]\n};\n","export default error => {\n  if (error) {\n    return \"tp-error-field\";\n  }\n  return \"\";\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupInputAction } from \"../../store/actions/inputActions\";\nimport { signupValidation } from \"../../store/actions/validationActins\";\nimport { createUserAccount } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport regex from \"../../helpers/validationRegex\";\nimport ErrorClassName from \"../../helpers/className\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._createUserAccount = this._createUserAccount.bind(this);\n    this._formValidation = this._formValidation.bind(this);\n\n    this.state = {\n      input: {\n        email: \"\",\n        name: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        username: \"\"\n      },\n\n      errors: {\n        email: null,\n        name: null,\n        password: null,\n        confirm_password: null,\n        username: null\n      }\n    };\n  }\n\n  _handleInputChange(e) {\n    const { id, value } = e.target;\n    const input = { ...this.state.input, [id]: value };\n    this.setState({\n      input\n    });\n  }\n\n  _formValidation(fieldToValidate, callback = () => {}) {\n    const { input } = this.state;\n    const allFields = {\n      email: {\n        message: \"Email is invalid \",\n        validateField: () => {\n          const value = _.get(input, \"email\");\n          const regexp = _.get(regex, \"emailRegex\");\n          if (value && regexp.test(value)) {\n            return true;\n          }\n          return false;\n        }\n      },\n      name: {\n        message: \"Name field is invalid \",\n        validateField: () => {\n          const value = _.get(input, \"name\");\n          const regexp = _.get(regex, \"nameRegex\");\n          if (value && regexp.test(value)) {\n            return true;\n          }\n          return false;\n        }\n      },\n      username: {\n        message:\n          \"Username field is invalid, it can only contain numbers, letters and _ , and must be 6 and above in length \",\n        validateField: () => {\n          const value = _.get(input, \"username\");\n          const regexp = _.get(regex, \"usernameRegex\");\n          if (value && regexp.test(value)) {\n            return true;\n          }\n          return false;\n        }\n      },\n      password: {\n        message:\n          \"Password is invalid, password must have uppercase, lowercase,a number, and any of this #$^*=!()@%&\",\n        validateField: () => {\n          const value = _.get(input, \"password\");\n          const regexp = _.get(regex, \"passwordRegex\");\n          if (value && regexp.test(value)) {\n            return true;\n          }\n          return false;\n        }\n      },\n      confirm_password: {\n        message: \"Passwords do not match\",\n        validateField: () => {\n          const passwordValue = _.get(input, \"password\");\n          const value = _.get(input, \"confirm_password\");\n          if (value && passwordValue) {\n            return true;\n          }\n          return false;\n        }\n      }\n    };\n\n    let errors = this.state.errors;\n    _.each(fieldToValidate, field => {\n      const fieldValidate = _.get(allFields, field);\n      if (fieldValidate) {\n        errors[field] = null;\n        const isFieldValid = fieldValidate.validateField();\n        if (!isFieldValid) {\n          errors[field] = _.get(fieldValidate, \"message\");\n        }\n      }\n    });\n\n    this.setState(\n      {\n        errors: errors\n      },\n      () => {\n        let isValid = true;\n\n        _.each(errors, err => {\n          if (err) {\n            isValid = false;\n          }\n        });\n\n        callback(isValid);\n      }\n    );\n  }\n\n  _createUserAccount(e) {\n    e.preventDefault();\n    const { input } = this.state;\n    const fieldToValidate = [\n      \"name\",\n      \"email\",\n      \"password\",\n      \"username\",\n      \"confirm_password\"\n    ];\n    this._formValidation(fieldToValidate, isValid => {\n      if (isValid) {\n        this.props.createUserAccount(input);\n      }\n    });\n  }\n\n  render() {\n    const { auth } = this.props;\n    const {\n      name,\n      email,\n      username,\n      password,\n      confirm_password\n    } = this.state.input;\n    const { errors } = this.state;\n    const {\n      email: emailError,\n      name: nameError,\n      password: passwordError,\n      confirm_password: confirmError,\n      username: usernameError\n    } = errors;\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-main-container\">\n        <div className=\"tp-auth-container\">\n          <h2 className=\"tp-auth-title\">Sign up</h2>\n          <form onSubmit={this._createUserAccount} noValidate>\n            <div className={ErrorClassName(nameError)}>\n              <label htmlFor=\"name\">Fullname</label>\n              <input\n                type=\"text\"\n                className={`tp-input-field`}\n                placeholder=\"John Doe\"\n                id=\"name\"\n                required\n                value={name}\n                onChange={this._handleInputChange}\n              />\n              {nameError && <p>*{nameError}</p>}\n            </div>\n            <div className={ErrorClassName(emailError)}>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                className={`tp-input-field `}\n                id=\"email\"\n                required\n                value={email}\n                onChange={this._handleInputChange}\n              />\n              {emailError && <p>*{emailError}</p>}\n            </div>\n            <div className={ErrorClassName(usernameError)}>\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                className={`tp-input-field`}\n                placeholder=\"Username\"\n                id=\"username\"\n                required\n                value={username}\n                onChange={this._handleInputChange}\n              />\n              {usernameError && <p>*{usernameError}</p>}\n            </div>\n            <div className={ErrorClassName(passwordError)}>\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                className={`tp-input-field `}\n                placeholder=\"Password\"\n                id=\"password\"\n                required\n                value={password}\n                onChange={this._handleInputChange}\n              />\n              {passwordError && <p>*{passwordError}</p>}\n            </div>\n            <div className={ErrorClassName(confirmError)}>\n              <label htmlFor=\"confirm_password\">Confirm Password</label>\n              <input\n                type=\"password\"\n                className={`tp-input-field`}\n                placeholder=\"Confirm Password\"\n                id=\"confirm_password\"\n                required\n                value={confirm_password}\n                onChange={this._handleInputChange}\n              />\n              {confirmError && <p>*{confirmError}</p>}\n            </div>\n            <div>\n              <button className=\"tp-auth-btn\">Sign up</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signup_input_data: state.input.signup,\n    validation: state.validation.signup,\n    error: state.error.signup,\n    auth: state.auth.user,\n    signingup: state.components.signingup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupInputAction: data => {\n      dispatch(signupInputAction(data));\n    },\n    signupInputValidation: data => {\n      dispatch(signupValidation(data));\n    },\n    createUserAccount: data => {\n      dispatch(createUserAccount(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","export const signupInputAction = data => {\n  return { type: \"SIGNUP_INPUT\", payload: data };\n};\n\nexport const loginInputAction = data => {\n  return { type: \"LOGIN_INPUT\", payload: data };\n};\n\nexport const passwordResetInputAction = data => {\n  return { type: \"PASSWORD_RESET_INPUT\", payload: data };\n};\n\nexport const updateProfileInputAction = data => {\n  return { type: \"UPDATE-PROFILE-INPUT\", payload: data };\n};\n","export const signupValidation = data => {\n  return (dispatch, getState) => {\n    const { id, value } = data;\n    let valid;\n    // declare regular expressions for fields\n    let feedback = { type: \"SIGNUP-VALIDATION\", payload: { id, valid: null } };\n    //\n    let usernameRegex = /^[a-z0-9-_A-Z]{6,30}$/;\n    let accountNumberRegex = /^[0-9]{10}$/;\n    let nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;\n    let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/;\n    let banks = [\n      \"Firstbank\",\n      \"GTB\",\n      \"Polaris Bank\",\n      \"Access Bank\",\n      \"UBA\",\n      \"Fidelity Bank\",\n      \"Eco Bank\"\n    ];\n    switch (id) {\n      case \"name\":\n        valid = nameRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 0 } };\n        break;\n      case \"email\":\n        valid = emailRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 1 } };\n        break;\n      case \"password\":\n        const confirmPassword = getState().input.signup.confirm_password;\n        dispatch({\n          type: \"SIGNUP-VALIDATION\",\n          payload: {\n            id: \"confirm_password\",\n            valid: confirmPassword === value,\n            index: 5\n          }\n        });\n        valid = passwordRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 5 }\n        };\n        break;\n      case \"bank\":\n        valid = banks.includes(value);\n        feedback = { ...feedback, payload: { id, valid, index: 3 } };\n        break;\n      case \"account_number\":\n        valid = accountNumberRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 4 }\n        };\n        break;\n      case \"confirm_password\":\n        let password = getState().input.signup.password;\n        valid = value === password;\n        feedback = { ...feedback, payload: { id, valid, index: 6 } };\n        break;\n      case \"username\":\n        valid = usernameRegex.test(value);\n        let payload = { id, valid, index: 2 };\n        feedback = { ...feedback, payload };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(feedback);\n  };\n};\n\nexport const loginValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"LOGIN-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n\nexport const passwordResetValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"PASSWORD-RESET-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginInputAction } from \"../../store/actions/inputActions\";\nimport { loginValidation } from \"../../store/actions/validationActins\";\nimport { logUserIn } from \"../../store/actions/authActions\";\nimport _ from \"lodash\";\nimport regex from \"../../helpers/validationRegex\";\nimport ErrorClassName from \"../../helpers/className\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this._formValidation = this._formValidation.bind(this);\n    this._logUserIn = this._logUserIn.bind(this);\n\n    this.state = {\n      input: {\n        email: \"\",\n        password: \"\"\n      },\n\n      errors: {\n        email: null\n      }\n    };\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    let input = { ...this.state.input, [id]: value };\n    this.setState({\n      input\n    });\n    //his.props.loginValidation(value);\n  }\n\n  _formValidation(fieldToValidate, callback = () => {}) {\n    const { input } = this.state;\n    const allFields = {\n      email: {\n        message: \"Email is invalid \",\n        validateField: () => {\n          const value = _.get(input, \"email\");\n          const regexp = _.get(regex, \"emailRegex\");\n          if (value && regexp.test(value)) {\n            return true;\n          }\n          return false;\n        }\n      }\n    };\n\n    let errors = this.state.errors;\n    _.each(fieldToValidate, field => {\n      const fieldValidate = _.get(allFields, field);\n      if (fieldValidate) {\n        errors[field] = null;\n        const isFieldValid = fieldValidate.validateField();\n        if (!isFieldValid) {\n          errors[field] = _.get(fieldValidate, \"message\");\n        }\n      }\n    });\n\n    this.setState(\n      {\n        errors: errors\n      },\n      () => {\n        let isValid = true;\n\n        _.each(errors, err => {\n          if (err) {\n            isValid = false;\n          }\n        });\n\n        callback(isValid);\n      }\n    );\n  }\n\n  _logUserIn(e) {\n    e.preventDefault();\n\n    const fieldToValidate = [\"email\"];\n    this._formValidation(fieldToValidate, isValid => {\n      if (isValid) {\n        this.props.loguserin(this.state.input);\n      }\n    });\n  }\n\n  render() {\n    const { email, password } = this.state.input;\n    const { errors } = this.state;\n    const { email: emailError } = errors;\n    const { auth } = this.props;\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-main-container\">\n        <div className=\"tp-auth-container\">\n          <h2 className=\"tp-auth-title\">Login</h2>\n          <form onSubmit={this._logUserIn} noValidate>\n            <div className={ErrorClassName(emailError)}>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                className={`tp-input-field`}\n                value={email}\n                onChange={this.handleInputChange}\n                onBlur={this.validateField}\n              />\n              {emailError && <p>* Email field is invalid</p>}\n            </div>\n            <div>\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"password\"\n                required\n                className=\"tp-input-field\"\n                value={password}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div>\n              <button className=\"tp-auth-btn\">Log in</button>\n            </div>\n            <div>\n              <p>\n                <Link to=\"/auth/password-reset\" className=\"tp-forgot-password\">\n                  Forgot Password\n                </Link>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth.user,\n    error: state.error.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginInputAction: data => {\n      dispatch(loginInputAction(data));\n    },\n    loginValidation: data => {\n      dispatch(loginValidation(data));\n    },\n    loguserin: data => {\n      return dispatch(logUserIn(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { requestPasswordReset } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport errorClassName from \"../../helpers/className\";\nimport regex from \"../../helpers/validationRegex\";\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._requestPasswordReset = this._requestPasswordReset.bind(this);\n\n    this.state = {\n      input: {\n        email: \"\"\n      },\n      errors: {\n        email: null\n      }\n    };\n  }\n\n  _handleInputChange(e) {\n    const { id, value } = e.target;\n    const input = { ...this.state.input, [id]: value };\n    this.setState({\n      input\n    });\n  }\n\n  _formValidation(fieldsToValidate, callback = () => {}) {\n    const { input } = this.state;\n    const allFields = {\n      email: {\n        message: \"Email is not valid\",\n        validateField: () => {\n          const value = _.get(input, \"email\");\n          const regexp = _.get(regex, \"emailRegex\");\n          if (value && regexp.test(value)) {\n            return true;\n          }\n          return false;\n        }\n      }\n    };\n\n    let errors = this.state.errors;\n    _.each(fieldsToValidate, field => {\n      const fieldValidate = _.get(allFields, field);\n      if (fieldValidate) {\n        errors[field] = null;\n        const isFieldValid = fieldValidate.validateField();\n        if (!isFieldValid) {\n          errors[field] = _.get(fieldValidate, \"message\");\n        }\n      }\n    });\n\n    this.setState(\n      {\n        errors\n      },\n      () => {\n        let isValid = true;\n        _.each(errors, err => {\n          if (err) {\n            isValid = false;\n          }\n        });\n\n        callback(isValid);\n      }\n    );\n  }\n\n  _requestPasswordReset(e) {\n    e.preventDefault();\n    const { email } = this.state.input;\n    const fieldsToValidate = [\"email\"];\n    this._formValidation(fieldsToValidate, isValid => {\n      if (isValid) {\n        this.props.requestPasswordReset(email);\n      }\n    });\n  }\n\n  render() {\n    const { user } = this.props;\n    const { email } = this.state.input;\n    const { email: emailError } = this.state.errors;\n    if (user) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-main-container\">\n        <div className=\"tp-auth-container\">\n          <h2 className=\"tp-auth-title\">Password Reset</h2>\n          <form onSubmit={this._requestPasswordReset} noValidate>\n            <div className={errorClassName(emailError)}>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                placeholder=\"email\"\n                id=\"email\"\n                required\n                className={`tp-input-field`}\n                value={email}\n                onChange={this._handleInputChange}\n              />\n              {emailError && <p>{emailError}</p>}\n            </div>\n            <div>\n              <button className=\"tp-auth-btn\">Send reset link</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    requestPasswordReset: email => {\n      dispatch(requestPasswordReset(email));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/login\">\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/signup\">\n          Signup\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { openDropDown } from \"../../store/actions/componentActions\";\n\nconst SignedInLink = ({ user, loguserout, dropdown, openDropdown }) => {\n  return (\n    <React.Fragment>\n      <li>\n        <div className=\"tp-initials\" onClick={openDropdown}>\n          <span>{user.username[0]}</span>\n          <div className={`tp-drop-down ${dropdown ? \"tp-open\" : \"\"}`}>\n            <ul>\n              <li>\n                <Link to=\"/update_profile\">Update profile</Link>\n              </li>\n              <li>\n                <Link to=\"/withdrawal\">Withdraw cash</Link>\n              </li>\n\n              <li>\n                <a href=\"javascript:void(0)\" onClick={loguserout}>\n                  logout\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </li>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    dropdown: state.components.dropdownopen\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    loguserout: e => {\n      e.preventDefault();\n      return dispatch(logout());\n    },\n    openDropdown: () => {\n      return dispatch(openDropDown());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignedInLink);\n","import React from \"react\";\nimport SignoutLinks from \"./signoutlinks\";\nimport SignedInLink from \"./signinlinks\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ user }) => {\n  const link = user ? <SignedInLink user={user} /> : <SignoutLinks />;\n  return (\n    <div className=\"tp-center\">\n      <nav className=\"tp-navigation\">\n        <Link to=\"/dashboard\" className=\"tp-brand\">\n          Topners\n        </Link>\n        <ul>{link}</ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nconst Question = ({ question, submitAnswer, blockedout }) => {\n  let options_ = question.option.map((value, ind) => {\n    return (\n      <label className=\"tp-radio-container\" key={ind}>\n        {value}\n        <input\n          type=\"radio\"\n          name=\"answer\"\n          onChange={submitAnswer}\n          value={value}\n        />\n        <span className=\"tp-checkmark\" />\n      </label>\n    );\n  });\n  return (\n    <div className=\"tp-question\">\n      <h3 className=\"tp-question-head\">{question.question}</h3>\n      {!blockedout ? (\n        <form>\n          <div>{options_}</div>\n        </form>\n      ) : (\n        <h2 style={{ color: \"red\" }}>Blocked out</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Question;\n","import React from \"react\";\n\nconst Howitworks = () => {\n  return (\n    <div className=\"tp-how-it-works\">\n      <h2 className=\"tp-how\">How it works ?</h2>\n      <div className=\"tp-step\">\n        <h4>Step 1</h4>\n        <h5>Deposit into your accout</h5>\n        <p>\n          The very first step is to pay money into your account, account with\n          amount less than 100 would be blocked out of joining games, be rest\n          assured that paying with us is very safe and secure\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 2</h4>\n        <h5>Sign up for game</h5>\n        <p>\n          After depositing into your account, the next step is to sign up for a\n          game, then wait to recieve questions for answering\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 3</h4>\n        <h5>Got question?, be smart and fast</h5>\n        <p>\n          Questions are posted every{\" \"}\n          <b>\n            Sunday, at 7:30pm, dont just get them right, you need to be fast and\n            fall among the top people, because only the <b>Topners</b> win\n          </b>\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 4</h4>\n        <h5>I won , time to get paid</h5>\n        <p>\n          The best part, payments are made during the following week after\n          previous game, please note that payments are made into the provided\n          account number\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4 style={{ color: \"red\" }}>Note</h4>\n        <p>\n          Questions are removed 10 minutes after they have been posted, in other\n          words you have the first ten minutes after the question has been\n          posted to answer them\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Howitworks;\n","const actions = {\n  signupforgame: \"SIGN-UP-FOR-GAME\",\n  error: \"ERROR\",\n  success: \"SUCCESS\",\n  setuser: \"SET-USER\",\n  submitanswer: \"SUBMIT-ANSWER\",\n  getgameobject: \"GET-GAME\",\n  setgameobject: \"SET-GAME\",\n  blockout: \"BLOCK-OUT\",\n  youwin: \"WIN\",\n  totalwinnersreached: \"TOTAL-WINNERS-REACHED\",\n  wronganswer: \"WRONG-ANSWER\",\n  submitanswer: \"SUBMIT-ANSWER\",\n  updateprofile: \"UPDATE-PROFILE\",\n  turngameonoroff: \"TURN-ON-OFF\",\n  verifyaccount: \"VERIFY\",\n  passwordreset: \"PASSWORDRESET\",\n  verifyreset: \"VERIFYRESET\",\n  resetuser: \"RESETUSER\",\n  withdrawcash: \"WITHDRAW-CASH\",\n  verifyuserpayment: \"VERIFY-USER-PAYMENT\",\n  paymentsuccessful: \"PAYMENT-SUCCESSFUL\",\n  retrypayment: \"RETRY-PAYMENT\",\n  paymenterror: \"PAYMENT-ERROR\",\n  requestverification: \"REQUEST-VERIFICATION\",\n  newuserjoined: \"NEW-USER-JOINED-GAME\",\n  modify: \"MODIFY\"\n};\n\nexport default actions;\n","import actions from \"../../io/actions\";\nimport axios from \"axios\";\nimport { doingAsync } from \"../actions/componentActions\";\nimport { toast } from \"react-toastify\";\nimport { setActiveUser } from \"./authActions\";\n\nimport { URL } from \"../../config/config\";\nimport { Socket } from \"dgram\";\nconst { setgameobject } = actions;\nexport const signupForGame = () => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    const user = getState().auth.user;\n    axios\n      .post(`${URL}/game/signupforgame`, { user }, { withCredentials: true })\n      .then(response => {\n        const { error, user, message, game } = response.data;\n        console.log(game);\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          dispatch(setActiveUser(user));\n          dispatch(setGameObject(game));\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, { className: \"tp-toast-error\" });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const submitAnswer = answer => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    const user = getState().auth.user;\n    const Socket = getState().components.Socket;\n    const answerToQuestion = getState().game.game.question.answer;\n    axios\n      .post(\n        `${URL}/game/submitanswer`,\n        {\n          user,\n          checkanswer: answer === answerToQuestion\n        },\n        { withCredentials: true }\n      )\n      .then(response => {\n        const { error, user, message, game } = response.data;\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n          Socket.emit(\"NEW-WINNER\");\n        }\n        if (user) {\n          dispatch(setActiveUser(user));\n        }\n        if (game) {\n          dispatch(setGameObject(game));\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, {\n          className: \"tp-toast-error\"\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const getGameObject = () => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    axios\n      .get(`${URL}/game`)\n      .then(response => {\n        const { game, error, message } = response.data;\n        if (error) {\n          toast(message, { className: \"tp-toast-error\" });\n        } else {\n          dispatch(setGameObject(game));\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(`${err.message}, couldn't fetch game, try refreshing again`, {\n          className: \"tp-toast-error\"\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const setGameObject = data => {\n  return {\n    type: setgameobject,\n    payload: data\n  };\n};\n\nexport const verifyUserPaymentAndUpdateUserBalance = reference => {\n  return (dispatch, getState) => {\n    dispatch(doingAsync(true));\n    // send verification back to my api\n    axios\n      .post(`${URL}/payment/verify`, { reference }, { withCredentials: true })\n\n      .then(response => {\n        const { error, message, user } = response.data;\n\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n          dispatch(setActiveUser(user));\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, {\n          className: \"tp-toast-error\"\n        });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const requestWithdrawal = amount => {\n  return dispatch => {\n    dispatch(doingAsync(true));\n    axios\n      .post(`${URL}/game/withdrawal`, { amount }, { withCredentials: true })\n      .then(response => {\n        const { error, user, message } = response.data;\n        if (error) {\n          toast(message, {\n            className: \"tp-toast-error\"\n          });\n        } else {\n          dispatch(setActiveUser(user));\n          toast(message, {\n            className: \"tp-toast-success\"\n          });\n        }\n        dispatch(doingAsync(false));\n      })\n      .catch(err => {\n        toast(err.message, { className: \"tp-toast-error\" });\n        dispatch(doingAsync(false));\n      });\n  };\n};\n\nexport const resetUser = () => {\n  return {\n    type: \"RESET-USER\",\n    payload: null\n  };\n};\n","import React from \"react\";\n\nconst CurrentWinners = ({ currentWinners, possibleWinners }) => {\n  return (\n    <div className=\"tp-current-winners-container\">\n      <div className=\"tp-current-winners-num\">\n        <h1>{currentWinners.length}</h1>\n      </div>\n      <h4>of {possibleWinners} winner(s)</h4>\n    </div>\n  );\n};\n\nexport default CurrentWinners;\n","import React, { Component } from \"react\";\nimport \"./userstyle.css\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Question from \"../layout/question\";\nimport Howitworks from \"../layout/howitworks\";\nimport {\n  signupForGame,\n  getGameObject,\n  submitAnswer\n} from \"../../store/actions/gameAction\";\n\nimport { doingAsync } from \"../../store/actions/componentActions\";\nimport CurrentWinners from \"./currentWinners\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.signUpForGame = this.signUpForGame.bind(this);\n    this.submitAnswer = this.submitAnswer.bind(this);\n\n    //this.socket = this.props.socket;\n\n    //\n  }\n\n  signUpForGame() {\n    // dispatch auth action that allows user to signup for game\n    this.props.doingAsync(true);\n    return this.props.signupForGame();\n  }\n\n  submitAnswer(e) {\n    if (e.target.checked) {\n      // submit answer\n      this.props.doingAsync(true);\n      return this.props.submitAnswer(e.target.value);\n    }\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.props.getGameObject();\n    //\n  }\n\n  render() {\n    const { user, game } = this.props;\n    const {\n      username,\n      account_balance,\n      account_number,\n      bank,\n      signupForNextGameShow\n    } = user ? user : {};\n    const { game: theGame, correct, wrong, blockout } = game;\n    const { gameison, pricepool, possibleWinners, currentWinners } = theGame\n      ? theGame\n      : {};\n    if (!user) {\n      return <Redirect to=\"/auth/login\" />;\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"tp-main-container\">\n            <div className=\"tp-left\">\n              <div className=\"tp-user-header\">\n                <h4>hi, {username}</h4>\n                <div>\n                  <h4>&#8358; {account_balance.toFixed(1)}</h4>\n                  <a\n                    href=\"https://paystack.com/pay/topnerz\"\n                    className=\"tp-top-up-account\"\n                  >\n                    Deposit\n                  </a>\n                </div>\n              </div>\n\n              {gameison && (\n                <CurrentWinners\n                  currentWinners={currentWinners}\n                  possibleWinners={possibleWinners}\n                />\n              )}\n              {!account_number || !bank ? (\n                <p className=\"tp-form-note\">\n                  You have not provided an account number or bank name, please\n                  update your profile\n                </p>\n              ) : (\n                \"\"\n              )}\n              <div className=\"tp-question-container\">\n                {theGame && gameison && signupForNextGameShow ? (\n                  <Question\n                    question={theGame.question}\n                    submitAnswer={this.submitAnswer}\n                    correct={correct}\n                    wrong={wrong}\n                    blockedout={blockout}\n                  />\n                ) : (\n                  <p className=\"tp-form-note\">\n                    ! When you are signed up for a game, and question is\n                    available for answering , it will appear here\n                  </p>\n                )}\n              </div>\n              <div className=\"tp-card-container\">\n                <div\n                  className={`tp-card ${(gameison || signupForNextGameShow) &&\n                    \"tp-block-out\"}`}\n                  onClick={this.signUpForGame}\n                >\n                  <div className=\"tp-card-top\">\n                    <h1>Fastsmart</h1>\n                    <span\n                      className={`tp-indicator ${\n                        signupForNextGameShow\n                          ? \"tp-indicator-open\"\n                          : \"tp-indicator-close\"\n                      }`}\n                      label=\"Indicates if you are signed up for a game already\"\n                    />\n                  </div>\n                  <div className=\"tp-card-bottom\">\n                    <div className=\"tp-entrance-fee\">\n                      <h4>Entrance fee</h4>\n                      <h4>&#8358;100</h4>\n                    </div>\n                    <div className=\"tp-possible-win\">\n                      <h4>Pool</h4>\n                      <h4>&#8358;{pricepool}</h4>\n                    </div>\n                    <div className=\"tp-possible-win\">\n                      <h4>Top</h4>\n                      <h4>{possibleWinners}</h4>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"tp-right\">\n              <Howitworks />\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupForGame: () => {\n      return dispatch(signupForGame());\n    },\n    getGameObject: () => {\n      return dispatch(getGameObject());\n    },\n    submitAnswer: answer => {\n      return dispatch(submitAnswer(answer));\n    },\n    doingAsync: done => {\n      return dispatch(doingAsync(done));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    game: state.game\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"tp-loader-container\">\n      <div className=\"tp-loader\">\n        <div className=\"tp-load tp-loader1\" />\n        <div className=\"tp-load tp-loader2\" />\n        <div className=\"tp-load tp-loader3\" />\n        <h3 style={{ color: \"#fff\" }}>Loading...</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setGameObject,\n  verifyUserPaymentAndUpdateUserBalance,\n  resetUser\n} from \"../../store/actions/gameAction\";\nimport {\n  setActiveUser,\n  updateUserProfile\n} from \"../../store/actions/authActions\";\nimport actions from \"../../io/actions\";\nimport { doingAsync } from \"../../store/actions/componentActions\";\nimport { Redirect } from \"react-router-dom\";\nconst {\n  error,\n  success,\n  setuser,\n  newuserjoined,\n  setgameobject,\n  totalwinnersreached,\n  paymentsuccessful,\n  paymenterror,\n  modify,\n  resetuser\n} = actions;\nclass Io extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      redirect: false\n    };\n  }\n  componentWillMount() {\n    const { toast } = this.props;\n    toast.configure({\n      autoClose: false\n    });\n  }\n  componentDidMount() {\n    const Socket = this.props.Socket;\n    const { toast } = this.props;\n    Socket.on(error, response => {\n      const id = 1;\n      if (toast.isActive(id)) {\n        toast.dismiss(id);\n        toast(response, {\n          toastId: id,\n          delay: 50,\n          type: toast.TYPE.INFO,\n          className: \"tp-toast-error\"\n        });\n      } else {\n        toast(response, {\n          toastId: id,\n          delay: 50,\n          type: toast.TYPE.INFO,\n          className: \"tp-toast-error\"\n        });\n      }\n      this.props.doingAsync(false);\n    });\n\n    Socket.on(success, response => {\n      const id = 2;\n      toast.dismiss(id);\n      toast(response, {\n        toastId: id,\n        delay: 50,\n        type: toast.TYPE.INFO,\n        className: \"tp-toast-success\"\n      });\n      this.props.doingAsync(false);\n    });\n\n    Socket.on(setuser, user => {\n      return this.props.setActiveUser(user);\n    });\n\n    Socket.on(setgameobject, game => {\n      this.props.setGameObject(game);\n    });\n\n    Socket.on(totalwinnersreached, response => {\n      this.props.doingAsync(false);\n      return toast(response, {\n        delay: 50,\n        type: toast.TYPE.INFO,\n        className: \"tp-toast-success\"\n      });\n    });\n\n    Socket.on(paymentsuccessful, response => {\n      toast(response, {\n        delay: 50,\n        className: \"tp-toast-success\"\n      });\n      this.setState({\n        redirect: true\n      });\n      this.props.doingAsync(false);\n    });\n\n    Socket.on(paymenterror, response => {\n      toast(response, {\n        delay: 50,\n        className: \"tp-toast-error\"\n      });\n      this.setState({\n        redirect: true\n      });\n      this.props.doingAsync(false);\n    });\n\n    Socket.on(newuserjoined, () => {\n      Socket.emit(modify);\n    });\n\n    Socket.on(resetuser, () => {\n      this.props.resetUser();\n    });\n  }\n  render() {\n    const { redirect } = this.state;\n    if (redirect) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return null;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGameObject: game => {\n      return dispatch(setGameObject(game));\n    },\n    setActiveUser: user => {\n      return dispatch(setActiveUser(user));\n    },\n    doingAsync: done => {\n      return dispatch(doingAsync(done));\n    },\n    updateUserProfile: data => {\n      return dispatch(updateUserProfile(data));\n    },\n    verifyUserPaymentAndUpdateUserBalance: reference => {\n      return dispatch(verifyUserPaymentAndUpdateUserBalance(reference));\n    },\n    resetUser: () => {\n      return dispatch(resetUser());\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return { Socket: state.components.Socket };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Io);\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"tp-spinner-container\">\n      <div className=\"lds-spinner\">\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nconst Banks = ({ bankNames, userBank, _handleInputChange }) => {\n  const render = bankNames\n    ? bankNames.sort().map((bank, ind) => {\n        return <option key={ind}>{bank}</option>;\n      })\n    : \"\";\n  return (\n    <select id=\"bank\" value={userBank} onChange={_handleInputChange}>\n      <option disabled>Select your bank</option>\n      {render}\n    </select>\n  );\n};\n\nexport default Banks;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  updateUserProfile,\n  requestVerification\n} from \"../../store/actions/authActions\";\nimport { updateProfileInputAction } from \"../../store/actions/inputActions\";\nimport { Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport regex from \"../../helpers/validationRegex\";\nimport errorClassName from \"../../helpers/className\";\nimport Banks from \"../layout/banks\";\n\nclass UpdateProfile extends Component {\n  constructor() {\n    super();\n\n    this.updateUserProfile = this.updateUserProfile.bind(this);\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._formValidation = this._formValidation.bind(this);\n    this.requestVerification = this.requestVerification.bind(this);\n\n    this.state = {\n      input: {\n        bank: \"Select your bank\",\n        account_number: \"\"\n      },\n\n      errors: {\n        bank: null,\n        account_number: null\n      }\n    };\n  }\n  _handleInputChange(e) {\n    const { id, value } = e.target;\n    const input = { ...this.state.input, [id]: value };\n    this.setState(\n      {\n        input\n      },\n      () => {}\n    );\n  }\n  updateUserProfile(e) {\n    e.preventDefault();\n    const { input } = this.state;\n    const fieldToValiadate = [\"bank\", \"account_number\"];\n    this._formValidation(fieldToValiadate, isValid => {\n      if (isValid) {\n        return this.props.updateUserProfile(input);\n      }\n    });\n    //\n  }\n\n  _formValidation(fieldsToValidate, callback = () => {}) {\n    const { input } = this.state;\n    const allFields = {\n      bank: {\n        message: \"Bank name is not valid\",\n        validateField: () => {\n          const value = _.get(input, \"bank\");\n          const bankNames = _.get(regex, \"bankNames\");\n          if (value && bankNames.indexOf(value) > -1) {\n            return true;\n          }\n          return false;\n        }\n      },\n      account_number: {\n        message: \"Account number is invalid, must be numbers and 10 in length\",\n        validateField: () => {\n          const value = _.get(input, \"account_number\");\n          const regexp = _.get(regex, \"accountNumberRegex\");\n          if (value && regexp.test(value)) {\n            return true;\n          }\n          return false;\n        }\n      }\n    };\n\n    let errors = this.state.errors;\n    _.each(fieldsToValidate, field => {\n      const fieldValidate = _.get(allFields, field);\n      if (fieldValidate) {\n        errors[field] = null;\n        const isFieldValid = fieldValidate.validateField();\n        if (!isFieldValid) {\n          errors[field] = _.get(fieldValidate, \"message\");\n        }\n      }\n    });\n\n    console.log(errors);\n\n    this.setState(\n      {\n        errors\n      },\n      () => {\n        let isValid = true;\n        _.each(errors, err => {\n          if (err) {\n            isValid = false;\n          }\n        });\n\n        callback(isValid);\n      }\n    );\n  }\n\n  requestVerification(e) {\n    e.preventDefault();\n    this.props.requestVerification();\n  }\n  render() {\n    const { user } = this.props;\n    const { account_number, bank, verified } = user ? user : {};\n    const {\n      bank: userBank,\n      account_number: userAccountNumber\n    } = this.state.input;\n    const { bank: bankErr, account_number: accountError } = this.state.errors;\n    console.log(this.state.errors);\n    if (!user) {\n      return <Redirect to=\"/auth/login\" />;\n    }\n    return (\n      <div className=\"tp-main-container\">\n        <div className=\"tp-auth-container\">\n          {!verified && (\n            <p className=\"tp-form-note\">\n              Your account is not verified and thereby limited, please verify\n              your account to get full control{\" \"}\n              <a\n                onClick={this.requestVerification}\n                style={{ color: \"red\", textDecoration: \"underline\" }}\n              >\n                Verify Account now\n              </a>\n            </p>\n          )}\n          <h2 className=\"tp-auth-title\">Update profile</h2>\n          <form onSubmit={this.updateUserProfile} noValidate>\n            <div className=\"tp-profile-details\">\n              <h4>Bankname: {bank}</h4>\n              <h4>Account number: {account_number}</h4>\n            </div>\n\n            <div className={errorClassName(bankErr)}>\n              <label htmlFor=\"bank\">Bank Name</label>\n              <Banks\n                bankNames={regex.bankNames}\n                userBank={userBank}\n                _handleInputChange={this._handleInputChange}\n              />\n              {bankErr && <p>{bankErr}</p>}\n            </div>\n\n            <div className={errorClassName(accountError)}>\n              <label htmlFor=\"account_number\">Account number</label>\n              <input\n                type=\"text\"\n                placeholder=\"Account number\"\n                id=\"account_number\"\n                value={userAccountNumber}\n                onChange={this._handleInputChange}\n              />\n              {accountError && <p>{accountError}</p>}\n            </div>\n            <div>\n              <button className=\"tp-auth-btn\">Save Changes</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    input_data: state.input.updateProfile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserProfile: data => {\n      return dispatch(updateUserProfile(data));\n    },\n    updateProfileInputAction: data => {\n      return dispatch(updateProfileInputAction(data));\n    },\n    requestVerification: data => {\n      return dispatch(requestVerification());\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UpdateProfile);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { verifyAccount } from \"../../store/actions/authActions\";\n\nclass Verify extends Component {\n  componentDidMount() {\n    const { verifyAccount, match } = this.props;\n    verifyAccount(match.params);\n  }\n  // verify user token\n  render() {\n    return null;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyAccount: data => {\n      return dispatch(verifyAccount(data));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Verify);\n","import React, { Component } from \"react\";\nimport { validateResetToken } from \"../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport regex from \"../../helpers/validationRegex\";\nimport errorClassName from \"../../helpers/className\";\n\nclass NewPassword extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: {\n        password: \"\",\n        confirm_password: \"\"\n      },\n      errors: {\n        password: null,\n        confirm_password: null\n      }\n    };\n\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._resetPassword = this._resetPassword.bind(this);\n    this._formValidation = this._formValidation.bind(this);\n  }\n\n  _handleInputChange(e) {\n    const { id, value } = e.target;\n    const input = { ...this.state.input, [id]: value };\n    this.setState({\n      input\n    });\n  }\n\n  _formValidation(fieldToValidate, callback = () => {}) {\n    const { input } = this.state;\n    const allFields = {\n      password: {\n        message:\n          \"Password is invalid, password must have uppercase, lowercase,a number, and any of this #$^*=!()@%&\",\n        validateField: () => {\n          const value = _.get(input, \"password\");\n          const regexp = _.get(regex, \"passwordRegex\");\n          if (value && regexp.test(value)) {\n            return true;\n          }\n          return false;\n        }\n      },\n      confirm_password: {\n        message: \"Passwords do not match\",\n        validateField: () => {\n          const passwordValue = _.get(input, \"password\");\n          const value = _.get(input, \"confirm_password\");\n          if (value && passwordValue) {\n            return true;\n          }\n          return false;\n        }\n      }\n    };\n\n    let errors = this.state.errors;\n    _.each(fieldToValidate, field => {\n      const fieldValidate = _.get(allFields, field);\n      if (fieldValidate) {\n        errors[field] = null;\n        const isFieldValid = fieldValidate.validateField();\n        if (!isFieldValid) {\n          errors[field] = _.get(fieldValidate, \"message\");\n        }\n      }\n    });\n\n    this.setState({ errors }, () => {\n      let isValid = true;\n      _.each(errors, err => {\n        if (err) {\n          isValid = false;\n        }\n      });\n      callback(isValid);\n    });\n  }\n\n  _resetPassword(e) {\n    e.preventDefault();\n    const { password } = this.state.input;\n    const { email, token } = this.props.match.params;\n    const fieldsToValidate = [\"password\", \"confirm_password\"];\n    this._formValidation(fieldsToValidate, isValid => {\n      if (isValid) {\n        this.props.validateResetToken({ password, email, token });\n      }\n    });\n  }\n  render() {\n    const { user } = this.props;\n    const { password, confirm_password } = this.state.input;\n    const { password: pErr, confirm_password: cpErr } = this.state.errors;\n    console.log(this.state.errors);\n    if (user) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-main-container\">\n        <div className=\"tp-auth-container\">\n          <form onSubmit={this._resetPassword} noValidate>\n            <div className={errorClassName(pErr)}>\n              <label className=\"tp-label\">\n                Password\n                <input\n                  type=\"password\"\n                  className={`tp-input-field `}\n                  placeholder=\"Password\"\n                  value={password}\n                  id=\"password\"\n                  onChange={this._handleInputChange}\n                  required\n                />\n              </label>\n              {pErr && <p>{pErr}</p>}\n            </div>\n            <div className={errorClassName(cpErr)}>\n              <label className=\"tp-label\">\n                Confirm password\n                <input\n                  type=\"password\"\n                  className={`tp-input-field`}\n                  placeholder=\"Password\"\n                  id=\"confirm_password\"\n                  value={confirm_password}\n                  onChange={this._handleInputChange}\n                  required\n                />\n              </label>\n              {cpErr && <p>{cpErr}</p>}\n            </div>\n\n            <div>\n              <button className=\"tp-auth-btn\">Reset Password</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    validateResetToken: data => {\n      return dispatch(validateResetToken(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewPassword);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { requestWithdrawal } from \"../../store/actions/gameAction\";\nimport { Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport errorClassName from \"../../helpers/className\";\n\nclass Withdraw extends Component {\n  constructor() {\n    super();\n    this.state = {\n      number: \"\",\n      errors: {\n        number: null\n      }\n    };\n\n    this._handleInputChange = this._handleInputChange.bind(this);\n    this._requestWithdrawal = this._requestWithdrawal.bind(this);\n    this._formValidation = this._formValidation.bind(this);\n  }\n\n  _handleInputChange(e) {\n    const { value } = e.target;\n    this.setState({\n      number: value\n    });\n  }\n  _formValidation(fieldsToValidate, callback = () => {}) {\n    const { number } = this.state;\n    const allFields = {\n      number: {\n        message:\n          \"Withdrawal amount needs to be greater than 1000 and lesser than 20000\",\n        validateField: () => {\n          const value = number;\n          if (value && value >= 1000 && value <= 20000) {\n            return true;\n          }\n          return false;\n        }\n      }\n    };\n\n    let errors = this.state.errors;\n    _.each(fieldsToValidate, field => {\n      const fieldValidate = _.get(allFields, field);\n      if (fieldValidate) {\n        errors[field] = null;\n        const isFieldValid = fieldValidate.validateField();\n        if (!isFieldValid) {\n          errors[field] = _.get(fieldValidate, \"message\");\n        }\n      }\n    });\n\n    this.setState(\n      {\n        errors\n      },\n      () => {\n        let isValid = true;\n        _.each(errors, err => {\n          if (err) {\n            isValid = false;\n          }\n        });\n\n        callback(isValid);\n      }\n    );\n  }\n  _requestWithdrawal(e) {\n    const { number } = this.state;\n    e.preventDefault();\n    const fieldToValidate = [\"number\"];\n    this._formValidation(fieldToValidate, isValid => {\n      if (isValid) {\n        this.props.requestWithdrawal(number);\n      }\n    });\n  }\n  render() {\n    const { number, errors } = this.state;\n    const { number: validAmount } = errors;\n    const { user } = this.props;\n    const { account_balance, verified } = user ? user : {};\n    const colors = account_balance < 1000 ? \"red\" : \"green\";\n    if (!user) {\n      return <Redirect to=\"/auth/login\" />;\n    }\n    return (\n      <div className=\"tp-main-container\">\n        <div className=\"tp-auth-container\">\n          {!verified && (\n            <p className=\"tp-form-note\">\n              Account is not verified, withdrawals are limited to &#8358;5000\n            </p>\n          )}\n          <h4 style={{ paddingTop: 10, paddingBottom: 10 }}>\n            your balance is\n            <span style={{ color: colors }}> &#8358;{account_balance}</span>\n          </h4>\n          <form onSubmit={this._requestWithdrawal} noValidate>\n            <div className={errorClassName(validAmount)}>\n              <label className=\"tp-label\" style={{ marginBottom: 10 }}>\n                Amount to withdraw\n              </label>\n\n              <input\n                type=\"number\"\n                min=\"1000\"\n                max=\"20000\"\n                value={number}\n                onChange={this._handleInputChange}\n                placeholder=\"Withdraw how much\"\n              />\n\n              {validAmount && <p>{validAmount}</p>}\n            </div>\n            <div>\n              <button className=\"tp-auth-btn\">Request withdrawal</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    requestWithdrawal: amount => {\n      return dispatch(requestWithdrawal(amount));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Withdraw);\n","import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport { verifyUserPaymentAndUpdateUserBalance } from \"../../store/actions/gameAction\";\nimport { connect } from \"react-redux\";\nclass VerifyPayment extends Component {\n  componentDidMount() {\n    const query = this.props.location.search;\n    const values = queryString.parse(query);\n\n    const { reference } = values;\n    this.props.verifyPaymentAndUpdateUserBalance(reference);\n  }\n  render() {\n    return null;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyPaymentAndUpdateUserBalance: reference => {\n      return dispatch(verifyUserPaymentAndUpdateUserBalance(reference));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VerifyPayment);\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/signup\";\nimport Login from \"./components/auth/login\";\nimport ResetPassword from \"./components/auth/resetpassword\";\nimport Navigation from \"./components/layout/navigation\";\nimport Dashboard from \"./components/User/dashboard\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./components/layout/loading\";\nimport Notification from \"./components/layout/notification\";\nimport IO from \"./components/layout/iolistener\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Spinner from \"./components/comps/loader\";\nimport UpdateProfile from \"./components/User/profile\";\nimport Verify from \"./components/auth/verify\";\nimport NewPassword from \"./components/auth/newpassword\";\nimport Withdraw from \"./components/User/withdraw\";\nimport VerifyPayment from \"./components/User/verifypayment\";\n\nfunction App({ loading, user, doingAsync, socket }) {\n  if (loading) {\n    return <Loader />;\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n          <ToastContainer />\n          <Navigation user={user} />\n          {doingAsync && <Spinner />}\n          <Switch>\n            <Route path=\"/auth/signup\" exact component={Signup} />\n            <Route path=\"/auth/login\" exact component={Login} />\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route\n              path=\"/dashboard\"\n              exact\n              render={props => <Dashboard {...props} socket={socket} />}\n            />\n            <Route\n              path=\"/auth/password-reset\"\n              exact\n              component={ResetPassword}\n            />\n            <Route\n              path=\"/update_profile\"\n              exact\n              render={props => <UpdateProfile {...props} user={user} />}\n            />\n            <Route\n              path=\"/verify_email/:email/:token\"\n              exact\n              component={Verify}\n            />\n            <Route\n              path=\"/password_reset/:email/:token\"\n              exact\n              component={NewPassword}\n            />\n            <Route path=\"/withdrawal\" exact component={Withdraw} />\n            <Route path=\"/payment/verify\" exact component={VerifyPayment} />\n          </Switch>\n\n          <IO toast={toast} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    user: state.auth.user,\n    doingAsync: state.components.doingAsync\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  login: {\n    email: \"\",\n    password: \"\"\n  },\n  resetpassword: {\n    email: \"\"\n  },\n\n  signup: {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  },\n  updateProfile: {\n    name: \"Odiagbe Osaro\",\n    bank: \"Select your bank\",\n    account_number: \"\"\n  }\n};\n\nconst inputReducer = (state = initState, action) => {\n  const { id, value } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"LOGIN_INPUT\":\n      let login = { ...state.login, [id]: value };\n      state = { ...state, login };\n      break;\n    case \"SIGNUP_INPUT\":\n      let signup = { ...state.signup, [id]: value };\n      state = { ...state, signup };\n      break;\n    case \"PASSWORD_RESET_INPUT\":\n      let resetpassword = { ...state.resetpassword, [id]: value };\n      state = { ...state, resetpassword };\n      break;\n\n    case \"UPDATE-PROFILE-INPUT\":\n      let updateProfile = { ...state.updateProfile, [id]: value };\n      state = { ...state, updateProfile };\n      break;\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default inputReducer;\n","const initState = {\n  signup: {\n    name: true,\n    email: true,\n    password: true,\n    bank: true,\n    account_number: true,\n    confirm_password: true,\n    username: true,\n    validField: [false, false, false, false, false, false, false]\n  },\n  login: {\n    email: true,\n    validfield: false\n  },\n\n  passwordreset: {\n    email: true,\n    validfield: false\n  }\n};\n\nconst validationReducer = (state = initState, action) => {\n  const { id, valid, index } = action.payload ? action.payload : {};\n\n  switch (action.type) {\n    case \"SIGNUP-VALIDATION\":\n      let checkFields = state.signup.validField;\n      checkFields[index] = valid;\n      let signup = {\n        ...state.signup,\n        [id]: valid,\n        validField: checkFields\n      };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-VALIDATION\":\n      let login = { ...state.login, email: valid, validfield: valid };\n      state = { ...state, login };\n      break;\n    case \"PASSWORD-RESET-VALIDATION\":\n      let passwordreset = {\n        ...state.passwordreset,\n        email: valid,\n        validfield: valid\n      };\n      state = { ...state, passwordreset };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default validationReducer;\n","const initState = {\n  signup: {\n    error: null,\n    success: null\n  },\n\n  login: {\n    error: null\n  }\n};\n\nconst errorReducer = (state = initState, action) => {\n  const { error, success } = action.payload || {};\n  switch (action.type) {\n    case \"SIGNUP-ERROR\":\n      const signup = { error, success };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-ERROR\":\n      console.log(error);\n      const login = { error };\n      state = { ...state, login };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default errorReducer;\n","const initState = {\n  loading: true,\n  user: null\n};\n\nconst authReducer = (state = initState, action) => {\n  const { loading, user } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"AUTHENTICATION-END\":\n      state = { ...state, loading };\n      break;\n    case \"SET-ACTIVE-USER\":\n      state = { ...state, user };\n      break;\n    case \"RESET-USER\":\n      let usr = { ...state.user, signupForNextGameShow: false };\n      state = { ...state, user: usr };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default authReducer;\n","const initState = {\n  logingin: false,\n  signingup: false,\n  dropdownopen: false,\n  notification: null,\n  Socket: null,\n  doingAsync: false\n};\n\nconst componentReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGING-IN-COMP\":\n      state = { ...state, logingin: action.payload };\n      break;\n    case \"SIGNING-UP-COMP\":\n      state = { ...state, signingup: action.payload };\n      break;\n    case \"DROP-COMP\":\n      let drop = state.dropdownopen ? false : true;\n      state = { ...state, dropdownopen: drop };\n      break;\n    case \"NOTIFICATION\":\n      let notification = action.payload;\n      state = { ...state, notification };\n      break;\n    case \"CREATE-SOCKET-CONNECTION\":\n      let Socket = action.payload;\n      state = { ...state, Socket };\n      break;\n    case \"DOING-ASYNC\":\n      state = { ...state, doingAsync: action.payload };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default componentReducer;\n","import actions from \"../../io/actions\";\n\nconst { setgameobject, resetuser } = actions;\nconst initState = {\n  game: null\n};\n\nconst gameReducer = (state = initState, action) => {\n  switch (action.type) {\n    case setgameobject:\n      state = { ...state, game: action.payload };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default gameReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./reducers/inputReducer\";\nimport validationReducer from \"./reducers/validationReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport componentReducer from \"./reducers/componentsReducer\";\nimport gameReducer from \"./reducers/gameReducer\";\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  validation: validationReducer,\n  error: errorReducer,\n  auth: authReducer,\n  components: componentReducer,\n  game: gameReducer\n});\n\nexport default rootReducer;\n","import * as IO from \"socket.io-client\";\nimport { URL } from \"../config/config\";\n\nconst Socket = IO(URL);\n\nexport default Socket;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/index\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { verifyAuthentication } from \"./store/actions/authActions\";\nimport Socket from \"./io/index\";\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n// somehow check if the user is logged in\nstore.dispatch(verifyAuthentication());\nconst socket = store.getState().components.Socket;\nif (!socket) {\n  store.dispatch({ type: \"CREATE-SOCKET-CONNECTION\", payload: Socket });\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App socket={Socket} />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}