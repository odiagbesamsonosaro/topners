{"version":3,"sources":["store/actions/componentActions.js","store/actions/authActions.js","components/auth/signup.js","store/actions/inputActions.js","store/actions/validationActins.js","components/auth/login.js","components/auth/resetpassword.js","components/layout/signoutlinks.js","components/layout/signinlinks.js","components/layout/navigation.js","components/User/dashboard.js","components/layout/loading.js","App.js","serviceWorker.js","store/reducers/inputReducer.js","store/reducers/validationReducer.js","store/reducers/errorReducer.js","store/reducers/authReducer.js","store/reducers/componentsReducer.js","store/index.js","index.js"],"names":["logingin","value","console","log","type","payload","signingup","url","Signup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","validateField","createUserAccount","e","_e$target","target","id","props","signupInputAction","signupInputValidation","_e$target2","preventDefault","signup_input_data","_this$props","validation","error","auth","name","email","username","password","bank","account_number","confirm_password","validName","validEmail","validUsername","validPassword","validBank","validAccount","validConfirmPassword","validField","signupError","signupButton","includes","react_default","a","createElement","className","disabled","react_router","to","onSubmit","htmlFor","concat","placeholder","required","onChange","onBlur","Component","connect","state","input","signup","user","components","dispatch","data","getState","valid","feedback","test","objectSpread","index","signupValidation","axios","post","then","res","_res$data","success","message","catch","err","Login","logUserIn","loginInputAction","loguserin","login_input_data","validfield","loginError","loginButton","react_router_dom","login","loginValidation","withCredentials","_res$data2","jwt","ResetPassword","passwordResetInputAction","passwordResetValidation","resetpassword_input_data","resetpassword","passwordreset","SignedOutLinks","Fragment","activeClassName","exact","loguserout","_res$data4","_ref","href","onClick","Navigation","link","signinlinks","signoutlinks","Dashboard","toFixed","Loader","loading","layout_loading","navigation","path","component","Boolean","window","location","hostname","match","initState","inputReducer","arguments","length","undefined","action","defineProperty","validationReducer","_objectSpread2","checkFields","errorReducer","authReducer","componentReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","get","_res$data3","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6db1248.chunk.js","sourcesContent":["export const logingin = value => {\n  console.log(\"loggin in \", value);\n  return {\n    type: \"LOGING-IN-COMP\",\n    payload: value\n  };\n};\n\nexport const signingup = value => {\n  return {\n    type: \"SIGNING-UP-COMP\",\n    payload: value\n  };\n};\n","import axios from \"axios\";\nimport { logingin, signingup } from \"../actions/componentActions\";\nimport * as jwt from \"jsonwebtoken\";\n\nconst url = \"https://topner.herokuapp.com/\";\n\nexport const createUserAccount = data => {\n  return dispatch => {\n    dispatch(signingup(true));\n    axios\n      .post(`${url}auth/signup`, data)\n      .then(res => {\n        console.log(res.data);\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"SIGNUP-ERROR\",\n            payload: { error: error.message, success: null }\n          });\n        } else {\n          dispatch({\n            type: \"SIGNUP-SUCCESS\",\n            payload: { error: null, success: success.message }\n          });\n        }\n\n        dispatch(signingup(false));\n      })\n      .catch(err => {\n        dispatch({\n          type: \"SIGNUP-ERROR\",\n          payload: err.message\n        });\n\n        dispatch(signingup(false));\n      });\n  };\n};\n\nexport const logUserIn = data => {\n  return dispatch => {\n    dispatch(logingin(true));\n    axios\n      .post(`${url}auth/login`, data, { withCredentials: true })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"LOGIN-ERROR\",\n            payload: { error }\n          });\n        } else {\n          let user = jwt.verify(success.auth, \"posiedonathenazeuskratoshydra\");\n          dispatch({ type: \"SET-ACTIVE-USER\", payload: { user: user.auth } });\n          dispatch(logingin(false));\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({\n          type: \"LOGIN-ERROR\",\n          payload: { error: \"Invalid credentials provided\" }\n        });\n        dispatch(logingin(false));\n      });\n  };\n};\n\nexport const verifyAuthentication = () => {\n  return dispatch => {\n    axios\n      .get(`${url}auth/verify_authentication`, {\n        withCredentials: true\n      })\n      .then(res => {\n        const { error, success } = res.data;\n        console.log(res.data);\n        if (error) {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false, user: null }\n          });\n        } else {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false, user: success.auth }\n          });\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: \"AUTHENTICATION-END\",\n          payload: { loading: false, user: null }\n        });\n      });\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    axios.post(`${url}auth/logout`, {}, { withCredentials: true }).then(res => {\n      const { error, success } = res.data;\n      if (error) {\n      } else {\n        dispatch({\n          type: \"SET-ACTIVE-USER\",\n          payload: { user: null }\n        });\n      }\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupInputAction } from \"../../store/actions/inputActions\";\nimport { signupValidation } from \"../../store/actions/validationActins\";\nimport { createUserAccount } from \"../../store/actions/authActions\";\nimport { stat } from \"fs\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.createUserAccount = this.createUserAccount.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.signupInputAction({ id, value });\n    this.props.signupInputValidation({ id, value });\n  }\n\n  validateField(e) {\n    const { id, value } = e.target;\n    this.props.signupInputValidation({ id, value });\n  }\n\n  createUserAccount(e) {\n    e.preventDefault();\n    this.props.createUserAccount(this.props.signup_input_data);\n  }\n\n  render() {\n    const {\n      signup_input_data,\n      validation,\n      error,\n      auth,\n      signingup\n    } = this.props;\n    const {\n      name,\n      email,\n      username,\n      password,\n      bank,\n      account_number,\n      confirm_password\n    } = signup_input_data;\n    const {\n      name: validName,\n      email: validEmail,\n      username: validUsername,\n      password: validPassword,\n      bank: validBank,\n      account_number: validAccount,\n      confirm_password: validConfirmPassword,\n      validField\n    } = validation;\n    const { error: signupError } = error;\n    const validform = validField.includes(false);\n    const signupButton = signingup ? (\n      <button className=\"tp-auth-btn\" disabled={true}>\n        <i className=\"fas fa-circle-notch fa-spin\" /> Creating account...\n      </button>\n    ) : (\n      <button className=\"tp-auth-btn\" disabled={false}>\n        Create Account\n      </button>\n    );\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Sign up</h2>\n        {signupError && <p className=\"tp-field-error\">{signupError}</p>}\n        <form onSubmit={this.createUserAccount}>\n          <div>\n            <label htmlFor=\"name\">Fullname</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validName ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"John Doe\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name must match the name in your bank account\n            </p>\n            {!validName && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              id=\"email\"\n              required\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">*email is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validUsername ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Username\"\n              id=\"username\"\n              required\n              value={username}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Username can only have letters and _\n            </p>\n            {!validUsername && (\n              <p className=\"tp-field-error\">\n                *Username can contain only letters and _\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"bank\">Bank Name</label>\n            <select\n              id=\"bank\"\n              className={`tp-input-field ${\n                validBank ? \"\" : \"tp-invalid-field\"\n              }`}\n              required\n              value={bank}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            >\n              <option disabled>Select your bank</option>\n              <option>Firstbank</option>\n              <option>UBA</option>\n              <option>Access Bank</option>\n              <option>Polaris Bank</option>\n              <option>Fidelity Bank</option>\n              <option>GTB</option>\n              <option>Eco Bank</option>\n            </select>\n            {!validBank && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"account_number\">Account Number</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validAccount ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Account Number\"\n              id=\"account_number\"\n              required\n              value={account_number}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name in account must match name provided above\n            </p>\n            {!validAccount && (\n              <p className=\"tp-field-error\">\n                * Account should be numbers and not more or less than ten in\n                length\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Password\"\n              id=\"password\"\n              required\n              value={password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <div className=\"tp-form-note\">\n              <p>* must have an uppercase</p>\n              <p>* must have a lowercase</p>\n              <p>* must have a number</p>\n              <p>* must have any of this #$^+=!*()@%&</p>\n            </div>\n            {!validPassword && (\n              <p className=\"tp-field-error\">\n                *password must contain numbers,lowercase, uppercas, any of this\n                [@#$%..]\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validConfirmPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Confirm Password\"\n              id=\"confirm_password\"\n              required\n              value={confirm_password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validConfirmPassword && (\n              <p className=\"tp-field-error\">*passwords do not match</p>\n            )}\n          </div>\n          <div>{signupButton}</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signup_input_data: state.input.signup,\n    validation: state.validation.signup,\n    error: state.error.signup,\n    auth: state.auth.user,\n    signingup: state.components.signingup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupInputAction: data => {\n      dispatch(signupInputAction(data));\n    },\n    signupInputValidation: data => {\n      dispatch(signupValidation(data));\n    },\n    createUserAccount: data => {\n      dispatch(createUserAccount(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","export const signupInputAction = data => {\n  return { type: \"SIGNUP_INPUT\", payload: data };\n};\n\nexport const loginInputAction = data => {\n  return { type: \"LOGIN_INPUT\", payload: data };\n};\n\nexport const passwordResetInputAction = data => {\n  return { type: \"PASSWORD_RESET_INPUT\", payload: data };\n};\n","export const signupValidation = data => {\n  return (dispatch, getState) => {\n    const { id, value } = data;\n    let valid;\n    // declare regular expressions for fields\n    let feedback = { type: \"SIGNUP-VALIDATION\", payload: { id, valid: null } };\n    //\n    let usernameRegex = /^[a-z0-9-_A-Z]{6,30}$/;\n    let accountNumberRegex = /^[0-9]{10}$/;\n    let nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;\n    let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/;\n    let banks = [\n      \"Firstbank\",\n      \"GTB\",\n      \"Polaris Bank\",\n      \"Access Bank\",\n      \"UBA\",\n      \"Fidelity Bank\",\n      \"Eco Bank\"\n    ];\n    switch (id) {\n      case \"name\":\n        valid = nameRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 0 } };\n        break;\n      case \"email\":\n        valid = emailRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 1 } };\n        break;\n      case \"password\":\n        const confirmPassword = getState().input.signup.confirm_password;\n        dispatch({\n          type: \"SIGNUP-VALIDATION\",\n          payload: {\n            id: \"confirm_password\",\n            valid: confirmPassword === value,\n            index: 5\n          }\n        });\n        valid = passwordRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 5 }\n        };\n        break;\n      case \"bank\":\n        valid = banks.includes(value);\n        feedback = { ...feedback, payload: { id, valid, index: 3 } };\n        break;\n      case \"account_number\":\n        valid = accountNumberRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 4 }\n        };\n        break;\n      case \"confirm_password\":\n        let password = getState().input.signup.password;\n        valid = value === password;\n        feedback = { ...feedback, payload: { id, valid, index: 6 } };\n        break;\n      case \"username\":\n        valid = usernameRegex.test(value);\n        let payload = { id, valid, index: 2 };\n        feedback = { ...feedback, payload };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(feedback);\n  };\n};\n\nexport const loginValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"LOGIN-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n\nexport const passwordResetValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"PASSWORD-RESET-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginInputAction } from \"../../store/actions/inputActions\";\nimport { loginValidation } from \"../../store/actions/validationActins\";\nimport { logUserIn } from \"../../store/actions/authActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.logUserIn = this.logUserIn.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.loginInputAction({ id, value });\n    //his.props.loginValidation(value);\n  }\n\n  validateField(e) {\n    //this.props.loginValidation(e.target.value);\n  }\n\n  logUserIn(e) {\n    e.preventDefault();\n    this.props.loguserin(this.props.login_input_data);\n  }\n\n  render() {\n    const { login_input_data, validation, auth, error, logingin } = this.props;\n    console.log(logingin);\n    const { email, password } = login_input_data;\n    const { email: validEmail, validfield } = validation;\n    console.log(\"logging: \", logingin);\n    const { error: loginError } = error;\n    const loginButton = logingin ? (\n      <button className=\"tp-auth-btn\" disabled={true}>\n        <i className=\"fas fa-circle-notch fa-spin\" /> Loging in...\n      </button>\n    ) : (\n      <button className=\"tp-auth-btn\" disabled={false}>\n        Log in\n      </button>\n    );\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Login</h2>\n        {loginError && <p className=\"tp-field-error\">{loginError}</p>}\n        <form onSubmit={this.logUserIn}>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is invalid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              required\n              className=\"tp-input-field\"\n              value={password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>{loginButton}</div>\n          <div>\n            <p>\n              <Link to=\"/auth/password-reset\" className=\"tp-forgot-password\">\n                Forgot Password\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    login_input_data: state.input.login,\n    validation: state.validation.login,\n    auth: state.auth.user,\n    error: state.error.login,\n    logingin: state.components.logingin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginInputAction: data => {\n      dispatch(loginInputAction(data));\n    },\n    loginValidation: data => {\n      dispatch(loginValidation(data));\n    },\n    loguserin: data => {\n      return dispatch(logUserIn(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { passwordResetInputAction } from \"../../store/actions/inputActions\";\nimport { passwordResetValidation } from \"../../store/actions/validationActins\";\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.passwordResetInputAction({ id, value });\n    this.props.passwordResetValidation(value);\n  }\n\n  validateField(e) {\n    this.props.passwordResetValidation(e.target.value);\n  }\n  render() {\n    const { validation, resetpassword_input_data } = this.props;\n    const { email } = resetpassword_input_data;\n    const { email: validEmail, validfield } = validation;\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Password Reset</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              id=\"email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is not valid</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={!validfield}>\n              Send reset link\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    resetpassword_input_data: state.input.resetpassword,\n    validation: state.validation.passwordreset\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    passwordResetInputAction: data => {\n      dispatch(passwordResetInputAction(data));\n    },\n    passwordResetValidation: data => {\n      dispatch(passwordResetValidation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/login\">\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/signup\">\n          Signup\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/authActions\";\n\nconst SignedInLink = ({ user, loguserout }) => {\n  return (\n    <React.Fragment>\n      <li>\n        <div className=\"tp-initials\">\n          <span>{user.username[0]}</span>\n        </div>\n      </li>\n      <li>\n        <a href=\"javascript:void(0)\" onClick={loguserout}>\n          logout\n        </a>\n      </li>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loguserout: e => {\n      e.preventDefault();\n      return dispatch(logout());\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLink);\n","import React from \"react\";\nimport SignoutLinks from \"./signoutlinks\";\nimport SignedInLink from \"./signinlinks\";\n\nconst Navigation = ({ user }) => {\n  console.log(user);\n  const link = user ? <SignedInLink user={user} /> : <SignoutLinks />;\n  return (\n    <nav className=\"tp-navigation\">\n      <a href=\"#default\" className=\"tp-brand\">\n        Topners\n      </a>\n      <ul>{link}</ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport \"./userstyle.css\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    //\n  }\n  render() {\n    let number = 500;\n    const { user } = this.props;\n    const { username, id } = user ? user : {};\n    console.log(user);\n    if (!user) {\n      return <Redirect to=\"/auth/login\" />;\n    } else {\n      return (\n        <div className=\"tp-main-container\">\n          <div className=\"tp-user-header\">\n            <h4>hi, {username}</h4>\n            <div>\n              <h4>&#8358;{number.toFixed(1)}</h4>\n              <button className=\"tp-top-up-account\">Deposit</button>\n            </div>\n          </div>\n          <div className=\"tp-question-container\">\n            <p className=\"tp-form-note\">\n              ! When you are signed up for a game, and question is available for\n              answering , it will appear here\n            </p>\n          </div>\n          <div className=\"tp-card-container\">\n            <div className=\"tp-card\">\n              <div className=\"tp-card-top\">\n                <h1>Bronze</h1>\n              </div>\n              <div className=\"tp-card-bottom\">\n                <div className=\"tp-entrance-fee\">\n                  <h4>Entrance fee</h4>\n                  <h4>&#8358;100</h4>\n                </div>\n                <div className=\"tp-possible-win\">\n                  <h4>Win</h4>\n                  <h4>upto 100k</h4>\n                </div>\n                <div className=\"tp-enter-context\">\n                  <button className=\"tp-enter-context-btn\">Enter bronze</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"tp-loader-container\">\n      <h1>Hold on hoss checking authentication status</h1>\n      <p>Wait a little bit......</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/signup\";\nimport Login from \"./components/auth/login\";\nimport ResetPassword from \"./components/auth/resetpassword\";\nimport Navigation from \"./components/layout/navigation\";\nimport Dashboard from \"./components/User/dashboard\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./components/layout/loading\";\n\nfunction App({ loading, user }) {\n  if (loading) {\n    return <Loader />;\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navigation user={user} />\n          <Switch>\n            <Route path=\"/auth/signup\" exact component={Signup} />\n            <Route path=\"/auth/login\" exact component={Login} />\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n            <Route\n              path=\"/auth/password-reset\"\n              exact\n              component={ResetPassword}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  login: {\n    email: \"\",\n    password: \"\"\n  },\n  resetpassword: {\n    email: \"\"\n  },\n\n  signup: {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    bank: \"Select your bank\",\n    account_number: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  }\n};\n\nconst inputReducer = (state = initState, action) => {\n  const { id, value } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"LOGIN_INPUT\":\n      let login = { ...state.login, [id]: value };\n      state = { ...state, login };\n      break;\n    case \"SIGNUP_INPUT\":\n      let signup = { ...state.signup, [id]: value };\n      state = { ...state, signup };\n      break;\n    case \"PASSWORD_RESET_INPUT\":\n      let resetpassword = { ...state.resetpassword, [id]: value };\n      state = { ...state, resetpassword };\n      break;\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default inputReducer;\n","const initState = {\n  signup: {\n    name: true,\n    email: true,\n    password: true,\n    bank: true,\n    account_number: true,\n    confirm_password: true,\n    username: true,\n    validField: [false, false, false, false, false, false, false]\n  },\n  login: {\n    email: true,\n    validfield: false\n  },\n\n  passwordreset: {\n    email: true,\n    validfield: false\n  }\n};\n\nconst validationReducer = (state = initState, action) => {\n  const { id, valid, index } = action.payload ? action.payload : {};\n\n  switch (action.type) {\n    case \"SIGNUP-VALIDATION\":\n      let checkFields = state.signup.validField;\n      checkFields[index] = valid;\n      let signup = {\n        ...state.signup,\n        [id]: valid,\n        validField: checkFields\n      };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-VALIDATION\":\n      let login = { ...state.login, email: valid, validfield: valid };\n      state = { ...state, login };\n      break;\n    case \"PASSWORD-RESET-VALIDATION\":\n      let passwordreset = {\n        ...state.passwordreset,\n        email: valid,\n        validfield: valid\n      };\n      state = { ...state, passwordreset };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default validationReducer;\n","const initState = {\n  signup: {\n    error: null,\n    success: null\n  },\n\n  login: {\n    error: null\n  }\n};\n\nconst errorReducer = (state = initState, action) => {\n  const { error, success } = action.payload || {};\n  switch (action.type) {\n    case \"SIGNUP-ERROR\":\n      const signup = { error, success };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-ERROR\":\n      console.log(error);\n      const login = { error };\n      state = { ...state, login };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default errorReducer;\n","const initState = {\n  loading: true,\n  user: null\n};\n\nconst authReducer = (state = initState, action) => {\n  // console.log(\"payload: \", action);\n  const { loading, user } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"AUTHENTICATION-END\":\n      state = { ...state, loading, user };\n      break;\n    case \"SET-ACTIVE-USER\":\n      console.log(user);\n      state = { ...state, user };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default authReducer;\n","const initState = {\n  logingin: false,\n  signingup: false\n};\n\nconst componentReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGING-IN-COMP\":\n      state = { ...state, logingin: action.payload };\n      break;\n    case \"SIGNING-UP-COMP\":\n      state = { ...state, signingup: action.payload };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default componentReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./reducers/inputReducer\";\nimport validationReducer from \"./reducers/validationReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport componentReducer from \"./reducers/componentsReducer\";\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  validation: validationReducer,\n  error: errorReducer,\n  auth: authReducer,\n  components: componentReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/index\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { verifyAuthentication } from \"./store/actions/authActions\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n// somehow check if the user is logged in\nstore.dispatch(verifyAuthentication());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}