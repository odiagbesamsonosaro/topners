{"version":3,"sources":["components/auth/signup.js","store/actions/inputActions.js","store/actions/validationActins.js","components/auth/login.js","components/auth/resetpassword.js","components/layout/signoutlinks.js","components/layout/navigation.js","components/User/dashboard.js","App.js","serviceWorker.js","store/reducers/inputReducer.js","store/reducers/validationReducer.js","store/index.js","index.js"],"names":["Signup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","validateField","e","_e$target","target","id","value","props","signupInputAction","signupInputValidation","_e$target2","_this$props","signup_input_data","validation","name","email","username","password","bank","account_number","confirm_password","validName","validEmail","validUsername","validPassword","validBank","validAccount","validConfirmPassword","validform","validField","includes","react_default","a","createElement","className","htmlFor","type","concat","placeholder","required","onChange","onBlur","disabled","Component","connect","state","input","signup","dispatch","data","payload","getState","valid","feedback","test","objectSpread","index","signupValidation","Login","loginInputAction","loginValidation","login_input_data","console","log","validfield","react_router_dom","to","login","ResetPassword","passwordResetInputAction","passwordResetValidation","resetpassword_input_data","resetpassword","passwordreset","SignedOutLinks","Fragment","activeClassName","exact","Navigation","_ref","objectDestructuringEmpty","href","signoutlinks","Dashboard","toFixed","App","navigation","react_router","path","component","Boolean","window","location","hostname","match","initState","inputReducer","arguments","length","undefined","action","defineProperty","validationReducer","_objectSpread2","checkFields","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efa06026.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupInputAction } from \"../../store/actions/inputActions\";\nimport { signupValidation } from \"../../store/actions/validationActins\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.signupInputAction({ id, value });\n    this.props.signupInputValidation({ id, value });\n  }\n\n  validateField(e) {\n    const { id, value } = e.target;\n    this.props.signupInputValidation({ id, value });\n  }\n\n  render() {\n    const { signup_input_data, validation } = this.props;\n    const {\n      name,\n      email,\n      username,\n      password,\n      bank,\n      account_number,\n      confirm_password\n    } = signup_input_data;\n    const {\n      name: validName,\n      email: validEmail,\n      username: validUsername,\n      password: validPassword,\n      bank: validBank,\n      account_number: validAccount,\n      confirm_password: validConfirmPassword,\n      validField\n    } = validation;\n    const validform = validField.includes(false);\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Sign up</h2>\n        <form>\n          <div>\n            <label htmlFor=\"name\">Fullname</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validName ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"John Doe\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name must match the name in your bank account\n            </p>\n            {!validName && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              id=\"email\"\n              required\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">*email is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validUsername ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Username\"\n              id=\"username\"\n              required\n              value={username}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Username can only have letters and _\n            </p>\n            {!validUsername && (\n              <p className=\"tp-field-error\">\n                *Username can contain only letters and _\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"bank\">Bank Name</label>\n            <select\n              id=\"bank\"\n              className={`tp-input-field ${\n                validBank ? \"\" : \"tp-invalid-field\"\n              }`}\n              required\n              value={bank}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            >\n              <option disabled>Select your bank</option>\n              <option>Firstbank</option>\n              <option>UBA</option>\n              <option>Access Bank</option>\n              <option>Polaris Bank</option>\n              <option>Fidelity Bank</option>\n              <option>GTB</option>\n              <option>Eco Bank</option>\n            </select>\n            {!validBank && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"account_number\">Account Number</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validAccount ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Account Number\"\n              id=\"account_number\"\n              required\n              value={account_number}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name in account must match name provided above\n            </p>\n            {!validAccount && (\n              <p className=\"tp-field-error\">\n                * Account should be numbers and not more or less than ten in\n                length\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Password\"\n              id=\"password\"\n              required\n              value={password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <div className=\"tp-form-note\">\n              <p>* must have an uppercase</p>\n              <p>* must have a lowercase</p>\n              <p>* must have a number</p>\n              <p>* must have any of this #$^+=!*()@%&</p>\n            </div>\n            {!validPassword && (\n              <p className=\"tp-field-error\">\n                *password must contain numbers,lowercase, uppercas, any of this\n                [@#$%..]\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validConfirmPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Confirm Password\"\n              id=\"confirm_password\"\n              required\n              value={confirm_password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validConfirmPassword && (\n              <p className=\"tp-field-error\">*passwords do not match</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={validform}>\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signup_input_data: state.input.signup,\n    validation: state.validation.signup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupInputAction: data => {\n      dispatch(signupInputAction(data));\n    },\n    signupInputValidation: data => {\n      dispatch(signupValidation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","export const signupInputAction = data => {\n  return { type: \"SIGNUP_INPUT\", payload: data };\n};\n\nexport const loginInputAction = data => {\n  return { type: \"LOGIN_INPUT\", payload: data };\n};\n\nexport const passwordResetInputAction = data => {\n  return { type: \"PASSWORD_RESET_INPUT\", payload: data };\n};\n","export const signupValidation = data => {\n  return (dispatch, getState) => {\n    const { id, value } = data;\n    let valid;\n    // declare regular expressions for fields\n    let feedback = { type: \"SIGNUP-VALIDATION\", payload: { id, valid: null } };\n    //\n    let usernameRegex = /^[a-z0-9-_A-Z]{6,30}$/;\n    let accountNumberRegex = /^[0-9]{10}$/;\n    let nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;\n    let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/;\n    let banks = [\n      \"Firstbank\",\n      \"GTB\",\n      \"Polaris Bank\",\n      \"Access Bank\",\n      \"UBA\",\n      \"Fidelity Bank\",\n      \"Eco Bank\"\n    ];\n    switch (id) {\n      case \"name\":\n        valid = nameRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 0 } };\n        break;\n      case \"email\":\n        valid = emailRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 1 } };\n        break;\n      case \"password\":\n        const confirmPassword = getState().input.signup.confirm_password;\n        dispatch({\n          type: \"SIGNUP-VALIDATION\",\n          payload: {\n            id: \"confirm_password\",\n            valid: confirmPassword === value,\n            index: 5\n          }\n        });\n        valid = passwordRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 5 }\n        };\n        break;\n      case \"bank\":\n        valid = banks.includes(value);\n        feedback = { ...feedback, payload: { id, valid, index: 3 } };\n        break;\n      case \"account_number\":\n        valid = accountNumberRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 4 }\n        };\n        break;\n      case \"confirm_password\":\n        let password = getState().input.signup.password;\n        valid = value === password;\n        feedback = { ...feedback, payload: { id, valid, index: 6 } };\n        break;\n      case \"username\":\n        valid = usernameRegex.test(value);\n        let payload = { id, valid, index: 2 };\n        feedback = { ...feedback, payload };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(feedback);\n  };\n};\n\nexport const loginValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"LOGIN-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n\nexport const passwordResetValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"PASSWORD-RESET-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginInputAction } from \"../../store/actions/inputActions\";\nimport { loginValidation } from \"../../store/actions/validationActins\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.loginInputAction({ id, value });\n    this.props.loginValidation(value);\n  }\n\n  validateField(e) {\n    this.props.loginValidation(e.target.value);\n  }\n\n  render() {\n    const { login_input_data, validation } = this.props;\n    console.log(validation);\n    const { email, password } = login_input_data;\n    const { email: validEmail, validfield } = validation;\n    console.log(validEmail);\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Login</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is invalid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              required\n              className=\"tp-input-field\"\n              value={password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={!validfield}>\n              Log in\n            </button>\n          </div>\n          <div>\n            <p>\n              <Link to=\"/auth/password-reset\" className=\"tp-forgot-password\">\n                Forgot Password\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    login_input_data: state.input.login,\n    validation: state.validation.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginInputAction: data => {\n      dispatch(loginInputAction(data));\n    },\n    loginValidation: data => {\n      dispatch(loginValidation(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { passwordResetInputAction } from \"../../store/actions/inputActions\";\nimport { passwordResetValidation } from \"../../store/actions/validationActins\";\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.passwordResetInputAction({ id, value });\n    this.props.passwordResetValidation(value);\n  }\n\n  validateField(e) {\n    this.props.passwordResetValidation(e.target.value);\n  }\n  render() {\n    const { validation, resetpassword_input_data } = this.props;\n    const { email } = resetpassword_input_data;\n    const { email: validEmail, validfield } = validation;\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Password Reset</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              id=\"email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is not valid</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={!validfield}>\n              Send reset link\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    resetpassword_input_data: state.input.resetpassword,\n    validation: state.validation.passwordreset\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    passwordResetInputAction: data => {\n      dispatch(passwordResetInputAction(data));\n    },\n    passwordResetValidation: data => {\n      dispatch(passwordResetValidation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/login\">\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/signup\">\n          Signup\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport SignoutLinks from \"./signoutlinks\";\n\nconst Navigation = ({}) => {\n  return (\n    <nav className=\"tp-navigation\">\n      <a href=\"#default\" className=\"tp-brand\">\n        Topners\n      </a>\n      <ul>{true ? <SignoutLinks /> : \"\"}</ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport \"./userstyle.css\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    //\n  }\n  render() {\n    let number = 5000;\n    return (\n      <div className=\"tp-main-container\">\n        <div className=\"tp-user-header\">\n          <h4>hi, sammyodiagbe</h4>\n          <div>\n            <h4>&#8358;{number.toFixed(1)}</h4>\n            <button className=\"tp-top-up-account\">Deposit</button>\n          </div>\n        </div>\n        <div className=\"tp-question-container\">\n          <p className=\"tp-form-note\">\n            ! When you are signed up for a game, and question is available for\n            answering , it will appear here\n          </p>\n        </div>\n        <div className=\"tp-card-container\">\n          <div className=\"tp-card\">\n            <div className=\"tp-card-top\">\n              <h1>Bronze</h1>\n            </div>\n            <div className=\"tp-card-bottom\">\n              <div className=\"tp-entrance-fee\">\n                <h4>Entrance fee</h4>\n                <h4>&#8358;100</h4>\n              </div>\n              <div className=\"tp-possible-win\">\n                <h4>Win</h4>\n                <h4>upto 100k</h4>\n              </div>\n              <div className=\"tp-enter-context\">\n                <button className=\"tp-enter-context-btn\">Enter bronze</button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"tp-card\">\n            <div className=\"tp-card-top tp-midy\">\n              <h1>Silver</h1>\n            </div>\n            <div className=\"tp-card-bottom\">\n              <div className=\"tp-entrance-fee\">\n                <h4>Entrance fee</h4>\n                <h4>&#8358;100</h4>\n              </div>\n\n              <div className=\"tp-possible-win\">\n                <h4>Prize</h4>\n                <h4>upto 150k</h4>\n              </div>\n              <div className=\"tp-enter-context\">\n                <button className=\"tp-enter-context-btn\">Enter silver</button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"tp-card\">\n            <div className=\"tp-card-top tp-maxi\">\n              <h1>Gold</h1>\n            </div>\n            <div className=\"tp-card-bottom\">\n              <div className=\"tp-entrance-fee\">\n                <h4>Entrance fee</h4>\n                <h4>&#8358;500</h4>\n              </div>\n              <div className=\"tp-possible-win\">\n                <h4>Win</h4>\n                <h4>upto 250k</h4>\n              </div>\n              <div className=\"tp-enter-context\">\n                <button className=\"tp-enter-context-btn\">Enter Gold</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/signup\";\nimport Login from \"./components/auth/login\";\nimport ResetPassword from \"./components/auth/resetpassword\";\nimport Navigation from \"./components/layout/navigation\";\nimport Dashboard from \"./components/User/dashboard\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation />\n        <Switch>\n          <Route path=\"/auth/signup\" exact component={Signup} />\n          <Route path=\"/auth/login\" exact component={Login} />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/auth/password-reset\" exact component={ResetPassword} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  login: {\n    email: \"\",\n    password: \"\"\n  },\n  resetpassword: {\n    email: \"\"\n  },\n\n  signup: {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    bank: \"Select your bank\",\n    account_number: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  }\n};\n\nconst inputReducer = (state = initState, action) => {\n  const { id, value } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"LOGIN_INPUT\":\n      let login = { ...state.login, [id]: value };\n      state = { ...state, login };\n      break;\n    case \"SIGNUP_INPUT\":\n      let signup = { ...state.signup, [id]: value };\n      state = { ...state, signup };\n      break;\n    case \"PASSWORD_RESET_INPUT\":\n      let resetpassword = { ...state.resetpassword, [id]: value };\n      state = { ...state, resetpassword };\n      break;\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default inputReducer;\n","const initState = {\n  signup: {\n    name: true,\n    email: true,\n    password: true,\n    bank: true,\n    account_number: true,\n    confirm_password: true,\n    username: true,\n    validField: [false, false, false, false, false, false, false]\n  },\n  login: {\n    email: true,\n    validfield: false\n  },\n\n  passwordreset: {\n    email: true,\n    validfield: false\n  }\n};\n\nconst validationReducer = (state = initState, action) => {\n  const { id, valid, index } = action.payload ? action.payload : {};\n\n  switch (action.type) {\n    case \"SIGNUP-VALIDATION\":\n      let checkFields = state.signup.validField;\n      checkFields[index] = valid;\n      let signup = {\n        ...state.signup,\n        [id]: valid,\n        validField: checkFields\n      };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-VALIDATION\":\n      let login = { ...state.login, email: valid, validfield: valid };\n      state = { ...state, login };\n      break;\n    case \"PASSWORD-RESET-VALIDATION\":\n      let passwordreset = {\n        ...state.passwordreset,\n        email: valid,\n        validfield: valid\n      };\n      state = { ...state, passwordreset };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default validationReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./reducers/inputReducer\";\nimport validationReducer from \"./reducers/validationReducer\";\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  validation: validationReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/index\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}