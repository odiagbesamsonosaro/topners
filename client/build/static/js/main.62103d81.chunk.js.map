{"version":3,"sources":["components/auth/signup.js","store/actions/inputActions.js","store/actions/validationActins.js","store/actions/authActions.js","components/auth/login.js","components/auth/resetpassword.js","components/layout/signoutlinks.js","components/layout/navigation.js","components/User/dashboard.js","App.js","serviceWorker.js","store/reducers/inputReducer.js","store/reducers/validationReducer.js","store/reducers/errorReducer.js","store/index.js","index.js"],"names":["Signup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","validateField","createUserAccount","e","_e$target","target","id","value","props","signupInputAction","signupInputValidation","_e$target2","preventDefault","signup_input_data","_this$props","validation","error","name","email","username","password","bank","account_number","confirm_password","validName","validEmail","validUsername","validPassword","validBank","validAccount","validConfirmPassword","validField","signupError","validform","includes","react_default","a","createElement","className","onSubmit","htmlFor","type","concat","placeholder","required","onChange","onBlur","disabled","Component","connect","state","input","signup","dispatch","data","payload","getState","valid","feedback","test","objectSpread","index","signupValidation","axios","post","then","res","_res$data","message","success","catch","err","Login","loginInputAction","loginValidation","login_input_data","console","log","validfield","react_router_dom","to","login","ResetPassword","passwordResetInputAction","passwordResetValidation","resetpassword_input_data","resetpassword","passwordreset","SignedOutLinks","Fragment","activeClassName","exact","Navigation","_ref","objectDestructuringEmpty","href","signoutlinks","Dashboard","toFixed","App","navigation","react_router","path","component","Boolean","window","location","hostname","match","initState","inputReducer","arguments","length","undefined","action","defineProperty","validationReducer","_objectSpread2","checkFields","errorReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62103d81.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupInputAction } from \"../../store/actions/inputActions\";\nimport { signupValidation } from \"../../store/actions/validationActins\";\nimport { createUserAccount } from \"../../store/actions/authActions\";\nimport { stat } from \"fs\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.createUserAccount = this.createUserAccount.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.signupInputAction({ id, value });\n    this.props.signupInputValidation({ id, value });\n  }\n\n  validateField(e) {\n    const { id, value } = e.target;\n    this.props.signupInputValidation({ id, value });\n  }\n\n  createUserAccount(e) {\n    e.preventDefault();\n    this.props.createUserAccount(this.props.signup_input_data);\n  }\n\n  render() {\n    const { signup_input_data, validation, error } = this.props;\n    const {\n      name,\n      email,\n      username,\n      password,\n      bank,\n      account_number,\n      confirm_password\n    } = signup_input_data;\n    const {\n      name: validName,\n      email: validEmail,\n      username: validUsername,\n      password: validPassword,\n      bank: validBank,\n      account_number: validAccount,\n      confirm_password: validConfirmPassword,\n      validField\n    } = validation;\n    const { error: signupError } = error;\n    const validform = validField.includes(false);\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Sign up</h2>\n        {signupError && <p className=\"tp-field-error\">{signupError}</p>}\n        <form onSubmit={this.createUserAccount}>\n          <div>\n            <label htmlFor=\"name\">Fullname</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validName ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"John Doe\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name must match the name in your bank account\n            </p>\n            {!validName && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              id=\"email\"\n              required\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">*email is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validUsername ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Username\"\n              id=\"username\"\n              required\n              value={username}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Username can only have letters and _\n            </p>\n            {!validUsername && (\n              <p className=\"tp-field-error\">\n                *Username can contain only letters and _\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"bank\">Bank Name</label>\n            <select\n              id=\"bank\"\n              className={`tp-input-field ${\n                validBank ? \"\" : \"tp-invalid-field\"\n              }`}\n              required\n              value={bank}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            >\n              <option disabled>Select your bank</option>\n              <option>Firstbank</option>\n              <option>UBA</option>\n              <option>Access Bank</option>\n              <option>Polaris Bank</option>\n              <option>Fidelity Bank</option>\n              <option>GTB</option>\n              <option>Eco Bank</option>\n            </select>\n            {!validBank && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"account_number\">Account Number</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validAccount ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Account Number\"\n              id=\"account_number\"\n              required\n              value={account_number}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name in account must match name provided above\n            </p>\n            {!validAccount && (\n              <p className=\"tp-field-error\">\n                * Account should be numbers and not more or less than ten in\n                length\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Password\"\n              id=\"password\"\n              required\n              value={password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <div className=\"tp-form-note\">\n              <p>* must have an uppercase</p>\n              <p>* must have a lowercase</p>\n              <p>* must have a number</p>\n              <p>* must have any of this #$^+=!*()@%&</p>\n            </div>\n            {!validPassword && (\n              <p className=\"tp-field-error\">\n                *password must contain numbers,lowercase, uppercas, any of this\n                [@#$%..]\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validConfirmPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Confirm Password\"\n              id=\"confirm_password\"\n              required\n              value={confirm_password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validConfirmPassword && (\n              <p className=\"tp-field-error\">*passwords do not match</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={validform}>\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signup_input_data: state.input.signup,\n    validation: state.validation.signup,\n    error: state.error.signup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupInputAction: data => {\n      dispatch(signupInputAction(data));\n    },\n    signupInputValidation: data => {\n      dispatch(signupValidation(data));\n    },\n    createUserAccount: data => {\n      dispatch(createUserAccount(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","export const signupInputAction = data => {\n  return { type: \"SIGNUP_INPUT\", payload: data };\n};\n\nexport const loginInputAction = data => {\n  return { type: \"LOGIN_INPUT\", payload: data };\n};\n\nexport const passwordResetInputAction = data => {\n  return { type: \"PASSWORD_RESET_INPUT\", payload: data };\n};\n","export const signupValidation = data => {\n  return (dispatch, getState) => {\n    const { id, value } = data;\n    let valid;\n    // declare regular expressions for fields\n    let feedback = { type: \"SIGNUP-VALIDATION\", payload: { id, valid: null } };\n    //\n    let usernameRegex = /^[a-z0-9-_A-Z]{6,30}$/;\n    let accountNumberRegex = /^[0-9]{10}$/;\n    let nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;\n    let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/;\n    let banks = [\n      \"Firstbank\",\n      \"GTB\",\n      \"Polaris Bank\",\n      \"Access Bank\",\n      \"UBA\",\n      \"Fidelity Bank\",\n      \"Eco Bank\"\n    ];\n    switch (id) {\n      case \"name\":\n        valid = nameRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 0 } };\n        break;\n      case \"email\":\n        valid = emailRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 1 } };\n        break;\n      case \"password\":\n        const confirmPassword = getState().input.signup.confirm_password;\n        dispatch({\n          type: \"SIGNUP-VALIDATION\",\n          payload: {\n            id: \"confirm_password\",\n            valid: confirmPassword === value,\n            index: 5\n          }\n        });\n        valid = passwordRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 5 }\n        };\n        break;\n      case \"bank\":\n        valid = banks.includes(value);\n        feedback = { ...feedback, payload: { id, valid, index: 3 } };\n        break;\n      case \"account_number\":\n        valid = accountNumberRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 4 }\n        };\n        break;\n      case \"confirm_password\":\n        let password = getState().input.signup.password;\n        valid = value === password;\n        feedback = { ...feedback, payload: { id, valid, index: 6 } };\n        break;\n      case \"username\":\n        valid = usernameRegex.test(value);\n        let payload = { id, valid, index: 2 };\n        feedback = { ...feedback, payload };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(feedback);\n  };\n};\n\nexport const loginValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"LOGIN-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n\nexport const passwordResetValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"PASSWORD-RESET-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n","import axios from \"axios\";\n\nexport const createUserAccount = data => {\n  return dispatch => {\n    axios\n      .post(\"http://localhost:5000/auth/signup\", data)\n      .then(res => {\n        const { error, message } = res.data;\n        if (error) {\n          return dispatch({\n            type: \"SIGNUP-ERROR\",\n            payload: { error: message, success: null }\n          });\n        }\n        return dispatch({\n          type: \"SIGNUP-SUCCESS\",\n          payload: { error: null, success: message }\n        });\n      })\n      .catch(err => {\n        return dispatch({\n          type: \"SIGNUP-ERROR\",\n          payload: err.message\n        });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginInputAction } from \"../../store/actions/inputActions\";\nimport { loginValidation } from \"../../store/actions/validationActins\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.loginInputAction({ id, value });\n    this.props.loginValidation(value);\n  }\n\n  validateField(e) {\n    this.props.loginValidation(e.target.value);\n  }\n\n  render() {\n    const { login_input_data, validation } = this.props;\n    console.log(validation);\n    const { email, password } = login_input_data;\n    const { email: validEmail, validfield } = validation;\n    console.log(validEmail);\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Login</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is invalid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              required\n              className=\"tp-input-field\"\n              value={password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={!validfield}>\n              Log in\n            </button>\n          </div>\n          <div>\n            <p>\n              <Link to=\"/auth/password-reset\" className=\"tp-forgot-password\">\n                Forgot Password\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    login_input_data: state.input.login,\n    validation: state.validation.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginInputAction: data => {\n      dispatch(loginInputAction(data));\n    },\n    loginValidation: data => {\n      dispatch(loginValidation(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { passwordResetInputAction } from \"../../store/actions/inputActions\";\nimport { passwordResetValidation } from \"../../store/actions/validationActins\";\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.passwordResetInputAction({ id, value });\n    this.props.passwordResetValidation(value);\n  }\n\n  validateField(e) {\n    this.props.passwordResetValidation(e.target.value);\n  }\n  render() {\n    const { validation, resetpassword_input_data } = this.props;\n    const { email } = resetpassword_input_data;\n    const { email: validEmail, validfield } = validation;\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Password Reset</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              id=\"email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is not valid</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={!validfield}>\n              Send reset link\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    resetpassword_input_data: state.input.resetpassword,\n    validation: state.validation.passwordreset\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    passwordResetInputAction: data => {\n      dispatch(passwordResetInputAction(data));\n    },\n    passwordResetValidation: data => {\n      dispatch(passwordResetValidation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/login\">\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/signup\">\n          Signup\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport SignoutLinks from \"./signoutlinks\";\n\nconst Navigation = ({}) => {\n  return (\n    <nav className=\"tp-navigation\">\n      <a href=\"#default\" className=\"tp-brand\">\n        Topners\n      </a>\n      <ul>{true ? <SignoutLinks /> : \"\"}</ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport \"./userstyle.css\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    //\n  }\n  render() {\n    let number = 5000;\n    return (\n      <div className=\"tp-main-container\">\n        <div className=\"tp-user-header\">\n          <h4>hi, sammyodiagbe</h4>\n          <div>\n            <h4>&#8358;{number.toFixed(1)}</h4>\n            <button className=\"tp-top-up-account\">Deposit</button>\n          </div>\n        </div>\n        <div className=\"tp-question-container\">\n          <p className=\"tp-form-note\">\n            ! When you are signed up for a game, and question is available for\n            answering , it will appear here\n          </p>\n        </div>\n        <div className=\"tp-card-container\">\n          <div className=\"tp-card\">\n            <div className=\"tp-card-top\">\n              <h1>Bronze</h1>\n            </div>\n            <div className=\"tp-card-bottom\">\n              <div className=\"tp-entrance-fee\">\n                <h4>Entrance fee</h4>\n                <h4>&#8358;100</h4>\n              </div>\n              <div className=\"tp-possible-win\">\n                <h4>Win</h4>\n                <h4>upto 100k</h4>\n              </div>\n              <div className=\"tp-enter-context\">\n                <button className=\"tp-enter-context-btn\">Enter bronze</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/signup\";\nimport Login from \"./components/auth/login\";\nimport ResetPassword from \"./components/auth/resetpassword\";\nimport Navigation from \"./components/layout/navigation\";\nimport Dashboard from \"./components/User/dashboard\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation />\n        <Switch>\n          <Route path=\"/auth/signup\" exact component={Signup} />\n          <Route path=\"/auth/login\" exact component={Login} />\n          <Route path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/auth/password-reset\" exact component={ResetPassword} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  login: {\n    email: \"\",\n    password: \"\"\n  },\n  resetpassword: {\n    email: \"\"\n  },\n\n  signup: {\n    name: \"Odiagbe Samson\",\n    email: \"\",\n    username: \"\",\n    bank: \"Select your bank\",\n    account_number: \"\",\n    password: \"Samson1@\",\n    confirm_password: \"Samson1@\"\n  }\n};\n\nconst inputReducer = (state = initState, action) => {\n  const { id, value } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"LOGIN_INPUT\":\n      let login = { ...state.login, [id]: value };\n      state = { ...state, login };\n      break;\n    case \"SIGNUP_INPUT\":\n      let signup = { ...state.signup, [id]: value };\n      state = { ...state, signup };\n      break;\n    case \"PASSWORD_RESET_INPUT\":\n      let resetpassword = { ...state.resetpassword, [id]: value };\n      state = { ...state, resetpassword };\n      break;\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default inputReducer;\n","const initState = {\n  signup: {\n    name: true,\n    email: true,\n    password: true,\n    bank: true,\n    account_number: true,\n    confirm_password: true,\n    username: true,\n    validField: [false, false, false, false, false, false, false]\n  },\n  login: {\n    email: true,\n    validfield: false\n  },\n\n  passwordreset: {\n    email: true,\n    validfield: false\n  }\n};\n\nconst validationReducer = (state = initState, action) => {\n  const { id, valid, index } = action.payload ? action.payload : {};\n\n  switch (action.type) {\n    case \"SIGNUP-VALIDATION\":\n      let checkFields = state.signup.validField;\n      checkFields[index] = valid;\n      let signup = {\n        ...state.signup,\n        [id]: valid,\n        validField: checkFields\n      };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-VALIDATION\":\n      let login = { ...state.login, email: valid, validfield: valid };\n      state = { ...state, login };\n      break;\n    case \"PASSWORD-RESET-VALIDATION\":\n      let passwordreset = {\n        ...state.passwordreset,\n        email: valid,\n        validfield: valid\n      };\n      state = { ...state, passwordreset };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default validationReducer;\n","const initState = {\n  signup: {\n    error: null,\n    success: null\n  }\n};\n\nconst errorReducer = (state = initState, action) => {\n  const { error, success } = action.payload || {};\n  switch (action.type) {\n    case \"SIGNUP-ERROR\":\n      const signup = { error, success };\n      state = { ...state, signup };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default errorReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./reducers/inputReducer\";\nimport validationReducer from \"./reducers/validationReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  validation: validationReducer,\n  error: errorReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/index\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}