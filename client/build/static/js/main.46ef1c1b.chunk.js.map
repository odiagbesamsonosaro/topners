{"version":3,"sources":["store/actions/componentActions.js","io/actions.js","store/actions/authActions.js","components/auth/signup.js","store/actions/inputActions.js","store/actions/validationActins.js","components/auth/login.js","components/auth/resetpassword.js","components/layout/signoutlinks.js","components/layout/signinlinks.js","components/layout/navigation.js","components/layout/question.js","components/layout/howitworks.js","store/actions/gameAction.js","components/User/dashboard.js","components/layout/loading.js","components/layout/iolistener.js","components/comps/loader.js","components/User/profile.js","App.js","serviceWorker.js","store/reducers/inputReducer.js","store/reducers/validationReducer.js","store/reducers/errorReducer.js","store/reducers/authReducer.js","store/reducers/componentsReducer.js","store/reducers/gameReducer.js","store/index.js","io/index.js","index.js"],"names":["logingin","value","console","log","type","payload","signingup","doingAsync","done","actions","_actions","signupforgame","error","success","setuser","submitanswer","getgameobject","setgameobject","blockout","youwin","totalwinnersreached","wronganswer","Object","defineProperty","updateprofile","url","setActiveUser","user","Signup","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","validateField","createUserAccount","e","_e$target","target","id","props","signupInputAction","signupInputValidation","_e$target2","preventDefault","signup_input_data","_this$props","validation","auth","name","email","username","password","confirm_password","bank","account_number","validName","validEmail","validUsername","validPassword","validConfirmPassword","signupButton","react_default","a","createElement","className","disabled","react_router","to","onSubmit","htmlFor","concat","placeholder","required","onChange","onBlur","Component","connect","state","input","signup","components","dispatch","data","getState","valid","feedback","test","objectSpread","index","includes","signupValidation","axios","post","withCredentials","then","res","_res$data","message","toast","delay","catch","err","Login","logUserIn","loginInputAction","loguserin","login_input_data","loginButton","react_router_dom","login","loginValidation","_res$data2","jwt","ResetPassword","passwordResetInputAction","passwordResetValidation","resetpassword_input_data","validfield","resetpassword","passwordreset","SignedOutLinks","Fragment","activeClassName","exact","dropdown","dropdownopen","loguserout","openDropdown","_ref","onClick","href","Navigation","link","signinlinks","signoutlinks","Question","question","submitAnswer","blockedout","options_","option","map","ind","key","style","color","Howitworks","Dashboard","signUpForGame","signupForNextGameShow","toastId","TYPE","INFO","signupForGame","checked","getGameObject","game","account_balance","theGame","correct","wrong","gameison","toFixed","layout_question","howitworks","Socket","emit","answer","answerToQuestion","totalWinners","totalNumberOfWinners","checkanswer","Loader","Io","configure","autoClose","on","response","isActive","dismiss","setGameObject","update","UpdateProfile","updateUserProfile","updateProfileInputAction","input_data","inputName","bankInputName","accountNumber","for","class","updateProfile","socket","_id","loading","layout_loading","react_toastify","navigation","loader","path","component","render","dashboard","assign","profile","iolistener","Boolean","window","location","hostname","match","initState","inputReducer","arguments","length","undefined","action","validField","validationReducer","_objectSpread2","checkFields","errorReducer","authReducer","notification","componentReducer","drop","gameReducer","rootReducer","combineReducers","IO","store","createStore","applyMiddleware","thunk","get","_res$data3","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46ef1c1b.chunk.js","sourcesContent":["export const logingin = value => {\n  console.log(\"loggin in \", value);\n  return {\n    type: \"LOGING-IN-COMP\",\n    payload: value\n  };\n};\n\nexport const signingup = value => {\n  return {\n    type: \"SIGNING-UP-COMP\",\n    payload: value\n  };\n};\n\nexport const openDropDown = () => {\n  console.log(\"opening drop down action \");\n  return {\n    type: \"DROP-COMP\",\n    payload: null\n  };\n};\n\nexport const notify = (dispatch, data, state) => {\n  const c = data.c ? \"green\" : \"red\";\n  data.c = c;\n  const notification = state().components.notification;\n  if (notification) {\n    dispatch({ type: \"NOTIFICATION\", payload: null });\n  }\n  dispatch({ type: \"NOTIFICATION\", payload: data });\n\n  setTimeout(() => {\n    dispatch({ type: \"NOTIFICATION\", payload: null });\n  }, 4500);\n};\n\nexport const doingAsync = done => {\n  return {\n    type: \"DOING-ASYNC\",\n    payload: done\n  };\n};\n","const actions = {\n  signupforgame: \"SIGN-UP-FOR-GAME\",\n  error: \"ERROR\",\n  success: \"SUCCESS\",\n  setuser: \"SET-USER\",\n  submitanswer: \"SUBMIT-ANSWER\",\n  getgameobject: \"GET-GAME\",\n  setgameobject: \"SET-GAME\",\n  blockout: \"BLOCK-OUT\",\n  youwin: \"WIN\",\n  totalwinnersreached: \"TOTAL-WINNERS-REACHED\",\n  wronganswer: \"WRONG-ANSWER\",\n  submitanswer: \"SUBMIT-ANSWER\",\n  updateprofile: \"UPDATE-PROFILE\"\n};\n\nexport default actions;\n","import axios from \"axios\";\nimport { logingin, signingup, notify } from \"../actions/componentActions\";\nimport * as jwt from \"jsonwebtoken\";\nimport { toast } from \"react-toastify\";\nimport actions from \"../../io/actions\";\n\nconst { updateprofile } = actions;\n\nconst url = \"https://topner.herokuapp.com/\";\n\nexport const createUserAccount = data => {\n  return (dispatch, getState) => {\n    dispatch(signingup(true));\n    axios\n      .post(`${url}auth/signup`, data, { withCredentials: true })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"SIGNUP-ERROR\",\n            payload: { error: error.message, success: null }\n          });\n          dispatch(signingup(false));\n          toast(error.message, {\n            delay: 50,\n            className: \"tp-toast-error\"\n          });\n        } else {\n          dispatch({\n            type: \"SIGNUP-SUCCESS\",\n            payload: { error: null, success: success.message }\n          });\n\n          toast(\"Account created successfully, you can login now\", {\n            delay: 50,\n            className: \"tp-toast-success\"\n          });\n        }\n\n        dispatch(signingup(false));\n      })\n      .catch(err => {\n        dispatch({\n          type: \"SIGNUP-ERROR\",\n          payload: err.message\n        });\n\n        dispatch(signingup(false));\n        toast(err.message, {\n          delay: 50,\n          className: \"tp-toast-error\"\n        });\n      });\n  };\n};\n\nexport const logUserIn = data => {\n  return (dispatch, getState) => {\n    dispatch(logingin(true));\n    axios\n      .post(`${url}auth/login`, data, { withCredentials: true })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"LOGIN-ERROR\",\n            payload: { error }\n          });\n          dispatch(logingin(false));\n          toast(\"Invalid credentials provided\", {\n            delay: 50,\n            className: \"tp-toast-error\"\n          });\n        } else {\n          let user = jwt.verify(success.auth, \"posiedonathenazeuskratoshydra\");\n          dispatch({ type: \"SET-ACTIVE-USER\", payload: { user: user.auth } });\n          dispatch(logingin(false));\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({\n          type: \"LOGIN-ERROR\",\n          payload: { error: \"Invalid credentials provided\" }\n        });\n        dispatch(logingin(false));\n        toast(err.message, {\n          delay: 50,\n          className: \"tp-toast-error\"\n        });\n      });\n  };\n};\n\nexport const verifyAuthentication = () => {\n  return dispatch => {\n    axios\n      .get(`${url}auth/verify_authentication`, {\n        withCredentials: true\n      })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false }\n          });\n        } else {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false }\n          });\n          dispatch(setActiveUser(success.auth));\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: \"AUTHENTICATION-END\",\n          payload: { loading: false }\n        });\n      });\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    axios.post(`${url}auth/logout`, {}, { withCredentials: true }).then(res => {\n      const { error } = res.data;\n      if (error) {\n      } else {\n        dispatch(setActiveUser(null));\n      }\n    });\n  };\n};\n\nexport const setActiveUser = user => {\n  return {\n    type: \"SET-ACTIVE-USER\",\n    payload: { user }\n  };\n};\n\nexport const updateUserProfile = data => {\n  return (dispatch, getState) => {\n    const socket = getState().components.Socket;\n    const _id = getState().auth.user;\n    socket.emit(updateprofile, { data, _id });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupInputAction } from \"../../store/actions/inputActions\";\nimport { signupValidation } from \"../../store/actions/validationActins\";\nimport { createUserAccount } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.createUserAccount = this.createUserAccount.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.signupInputAction({ id, value });\n    this.props.signupInputValidation({ id, value });\n  }\n\n  validateField(e) {\n    const { id, value } = e.target;\n    this.props.signupInputValidation({ id, value });\n  }\n\n  createUserAccount(e) {\n    e.preventDefault();\n    this.props.createUserAccount(this.props.signup_input_data);\n  }\n\n  render() {\n    const { signup_input_data, validation, auth, signingup } = this.props;\n    const {\n      name,\n      email,\n      username,\n      password,\n      bank,\n      account_number,\n      confirm_password\n    } = signup_input_data;\n    const {\n      name: validName,\n      email: validEmail,\n      username: validUsername,\n      password: validPassword,\n      bank: validBank,\n      account_number: validAccount,\n      confirm_password: validConfirmPassword\n    } = validation;\n    const signupButton = signingup ? (\n      <button className=\"tp-auth-btn\" disabled={true}>\n        <i className=\"fas fa-circle-notch fa-spin\" /> Creating account...\n      </button>\n    ) : (\n      <button className=\"tp-auth-btn\" disabled={false}>\n        Create Account\n      </button>\n    );\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Sign up</h2>\n        <form onSubmit={this.createUserAccount}>\n          <div>\n            <label htmlFor=\"name\">Fullname</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validName ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"John Doe\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validName && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              id=\"email\"\n              required\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">*email is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validUsername ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Username\"\n              id=\"username\"\n              required\n              value={username}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Username can only have letters and _\n            </p>\n            {!validUsername && (\n              <p className=\"tp-field-error\">\n                *Username can contain only letters and _\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Password\"\n              id=\"password\"\n              required\n              value={password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <div className=\"tp-form-note\">\n              <p>* must have an uppercase</p>\n              <p>* must have a lowercase</p>\n              <p>* must have a number</p>\n              <p>* must have any of this #$^+=!*()@%&</p>\n            </div>\n            {!validPassword && (\n              <p className=\"tp-field-error\">\n                *password must contain numbers,lowercase, uppercas, any of this\n                [@#$%..]\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validConfirmPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Confirm Password\"\n              id=\"confirm_password\"\n              required\n              value={confirm_password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validConfirmPassword && (\n              <p className=\"tp-field-error\">*passwords do not match</p>\n            )}\n          </div>\n          <div>{signupButton}</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signup_input_data: state.input.signup,\n    validation: state.validation.signup,\n    error: state.error.signup,\n    auth: state.auth.user,\n    signingup: state.components.signingup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupInputAction: data => {\n      dispatch(signupInputAction(data));\n    },\n    signupInputValidation: data => {\n      dispatch(signupValidation(data));\n    },\n    createUserAccount: data => {\n      dispatch(createUserAccount(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","export const signupInputAction = data => {\n  return { type: \"SIGNUP_INPUT\", payload: data };\n};\n\nexport const loginInputAction = data => {\n  return { type: \"LOGIN_INPUT\", payload: data };\n};\n\nexport const passwordResetInputAction = data => {\n  return { type: \"PASSWORD_RESET_INPUT\", payload: data };\n};\n\nexport const updateProfileInputAction = data => {\n  return { type: \"UPDATE-PROFILE-INPUT\", payload: data };\n};\n","export const signupValidation = data => {\n  return (dispatch, getState) => {\n    const { id, value } = data;\n    let valid;\n    // declare regular expressions for fields\n    let feedback = { type: \"SIGNUP-VALIDATION\", payload: { id, valid: null } };\n    //\n    let usernameRegex = /^[a-z0-9-_A-Z]{6,30}$/;\n    let accountNumberRegex = /^[0-9]{10}$/;\n    let nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;\n    let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/;\n    let banks = [\n      \"Firstbank\",\n      \"GTB\",\n      \"Polaris Bank\",\n      \"Access Bank\",\n      \"UBA\",\n      \"Fidelity Bank\",\n      \"Eco Bank\"\n    ];\n    switch (id) {\n      case \"name\":\n        valid = nameRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 0 } };\n        break;\n      case \"email\":\n        valid = emailRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 1 } };\n        break;\n      case \"password\":\n        const confirmPassword = getState().input.signup.confirm_password;\n        dispatch({\n          type: \"SIGNUP-VALIDATION\",\n          payload: {\n            id: \"confirm_password\",\n            valid: confirmPassword === value,\n            index: 5\n          }\n        });\n        valid = passwordRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 5 }\n        };\n        break;\n      case \"bank\":\n        valid = banks.includes(value);\n        feedback = { ...feedback, payload: { id, valid, index: 3 } };\n        break;\n      case \"account_number\":\n        valid = accountNumberRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 4 }\n        };\n        break;\n      case \"confirm_password\":\n        let password = getState().input.signup.password;\n        valid = value === password;\n        feedback = { ...feedback, payload: { id, valid, index: 6 } };\n        break;\n      case \"username\":\n        valid = usernameRegex.test(value);\n        let payload = { id, valid, index: 2 };\n        feedback = { ...feedback, payload };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(feedback);\n  };\n};\n\nexport const loginValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"LOGIN-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n\nexport const passwordResetValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"PASSWORD-RESET-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginInputAction } from \"../../store/actions/inputActions\";\nimport { loginValidation } from \"../../store/actions/validationActins\";\nimport { logUserIn } from \"../../store/actions/authActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.logUserIn = this.logUserIn.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.loginInputAction({ id, value });\n    //his.props.loginValidation(value);\n  }\n\n  validateField(e) {\n    //this.props.loginValidation(e.target.value);\n  }\n\n  logUserIn(e) {\n    e.preventDefault();\n    this.props.loguserin(this.props.login_input_data);\n  }\n\n  render() {\n    const { login_input_data, validation, auth, logingin } = this.props;\n\n    const { email, password } = login_input_data;\n    const { email: validEmail } = validation;\n    const loginButton = logingin ? (\n      <button className=\"tp-auth-btn\" disabled={true}>\n        <i className=\"fas fa-circle-notch fa-spin\" /> Loging in...\n      </button>\n    ) : (\n      <button className=\"tp-auth-btn\" disabled={false}>\n        Log in\n      </button>\n    );\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Login</h2>\n        <form onSubmit={this.logUserIn}>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is invalid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              required\n              className=\"tp-input-field\"\n              value={password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>{loginButton}</div>\n          <div>\n            <p>\n              <Link to=\"/auth/password-reset\" className=\"tp-forgot-password\">\n                Forgot Password\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    login_input_data: state.input.login,\n    validation: state.validation.login,\n    auth: state.auth.user,\n    error: state.error.login,\n    logingin: state.components.logingin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginInputAction: data => {\n      dispatch(loginInputAction(data));\n    },\n    loginValidation: data => {\n      dispatch(loginValidation(data));\n    },\n    loguserin: data => {\n      return dispatch(logUserIn(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { passwordResetInputAction } from \"../../store/actions/inputActions\";\nimport { passwordResetValidation } from \"../../store/actions/validationActins\";\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.passwordResetInputAction({ id, value });\n    this.props.passwordResetValidation(value);\n  }\n\n  validateField(e) {\n    this.props.passwordResetValidation(e.target.value);\n  }\n  render() {\n    const { validation, resetpassword_input_data } = this.props;\n    const { email } = resetpassword_input_data;\n    const { email: validEmail, validfield } = validation;\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Password Reset</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              id=\"email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is not valid</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={!validfield}>\n              Send reset link\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    resetpassword_input_data: state.input.resetpassword,\n    validation: state.validation.passwordreset\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    passwordResetInputAction: data => {\n      dispatch(passwordResetInputAction(data));\n    },\n    passwordResetValidation: data => {\n      dispatch(passwordResetValidation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/login\">\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/signup\">\n          Signup\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { openDropDown } from \"../../store/actions/componentActions\";\n\nconst SignedInLink = ({ user, loguserout, dropdown, openDropdown }) => {\n  return (\n    <React.Fragment>\n      <li>\n        <div className=\"tp-initials\" onClick={openDropdown}>\n          <span>{user.username[0]}</span>\n          <div className={`tp-drop-down ${dropdown ? \"tp-open\" : \"\"}`}>\n            <ul>\n              <li>\n                <Link to=\"/update_profile\">Update profile</Link>\n              </li>\n\n              <li>\n                <a href=\"javascript:void(0)\" onClick={loguserout}>\n                  logout\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </li>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    dropdown: state.components.dropdownopen\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    loguserout: e => {\n      e.preventDefault();\n      return dispatch(logout());\n    },\n    openDropdown: () => {\n      return dispatch(openDropDown());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignedInLink);\n","import React from \"react\";\nimport SignoutLinks from \"./signoutlinks\";\nimport SignedInLink from \"./signinlinks\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ user }) => {\n  const link = user ? <SignedInLink user={user} /> : <SignoutLinks />;\n  return (\n    <nav className=\"tp-navigation\">\n      <Link to=\"/dashboard\" className=\"tp-brand\">\n        Topners\n      </Link>\n      <ul>{link}</ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nconst Question = ({ question, submitAnswer, blockedout }) => {\n  let options_ = question.option.map((value, ind) => {\n    return (\n      <label className=\"tp-radio-container\" key={ind}>\n        {value}\n        <input\n          type=\"radio\"\n          name=\"answer\"\n          onChange={submitAnswer}\n          value={value}\n        />\n        <span className=\"tp-checkmark\" />\n      </label>\n    );\n  });\n  return (\n    <div className=\"tp-question\">\n      <h3 className=\"tp-question-head\">{question.question}</h3>\n      {!blockedout ? (\n        <form>\n          <div>{options_}</div>\n        </form>\n      ) : (\n        <h2 style={{ color: \"red\" }}>Blocked out</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Question;\n","import React from \"react\";\n\nconst Howitworks = () => {\n  return (\n    <div className=\"tp-how-it-works\">\n      <h2 className=\"tp-how\">How it works ?</h2>\n      <div className=\"tp-step\">\n        <h4>Step 1</h4>\n        <h5>Deposit into your accout</h5>\n        <p>\n          The very first step is to pay money into your account, account with\n          amount less than 100 would be blocked out of joining games, be rest\n          assured that paying with us is very safe and secure\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 2</h4>\n        <h5>Sign up for game</h5>\n        <p>\n          After depositing into your account, the next step is to sign up for a\n          game, then wait to recieve questions for answering\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 3</h4>\n        <h5>Got question?, be smart and fast</h5>\n        <p>\n          Questions are posted every{\" \"}\n          <b>\n            Sunday, at 7:30pm, dont just get them right, you need to be fast and\n            fall among the top people, because only the <b>Topners</b> win\n          </b>\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 4</h4>\n        <h5>I won , time to get paid</h5>\n        <p>\n          The best part, payments are made during the following week after\n          previous game, please note that payments are made into the provided\n          account number\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4 style={{ color: \"red\" }}>Note</h4>\n        <p>\n          Questions are removed 10 minutes after they have been posted, in other\n          words you have the first ten minutes after the question has been\n          posted to answer them\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Howitworks;\n","import actions from \"../../io/actions\";\n\nconst { signupforgame, submitanswer, getgameobject, setgameobject } = actions;\nexport const signupForGame = () => {\n  return (dispatch, getState) => {\n    const user = getState().auth.user;\n    const Io = getState().components.Socket;\n    Io.emit(signupforgame, user);\n  };\n};\n\nexport const submitAnswer = answer => {\n  return (dispatch, getState) => {\n    const user = getState().auth.user;\n    const answerToQuestion = getState().game.game.question.answer;\n    const totalWinners = getState().game.game.totalNumberOfWinners;\n    const Socket = getState().components.Socket;\n    Socket.emit(submitanswer, {\n      user,\n      checkanswer: answer === answerToQuestion,\n      totalNumberOfWinners: totalWinners\n    });\n  };\n};\n\nexport const getGameObject = () => {\n  return (dispatch, getState) => {\n    const Socket = getState().components.Socket;\n    Socket.emit(getgameobject);\n  };\n};\n\nexport const setGameObject = data => {\n  console.log(data);\n  return dispatch => {\n    dispatch({\n      type: setgameobject,\n      payload: data\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport \"./userstyle.css\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Question from \"../layout/question\";\nimport Howitworks from \"../layout/howitworks\";\nimport {\n  signupForGame,\n  getGameObject,\n  submitAnswer\n} from \"../../store/actions/gameAction\";\n\nimport { doingAsync } from \"../../store/actions/componentActions\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.signUpForGame = this.signUpForGame.bind(this);\n    this.submitAnswer = this.submitAnswer.bind(this);\n\n    //this.socket = this.props.socket;\n\n    //\n  }\n\n  signUpForGame() {\n    // dispatch auth action that allows user to signup for game\n    const { signupForNextGameShow } = this.props.user;\n\n    if (signupForNextGameShow) {\n      const id = 1;\n      return toast(\"You are already signed up for next game..\", {\n        toastId: id,\n        delay: 50,\n        type: toast.TYPE.INFO,\n        className: \"tp-toast-error\"\n      });\n    }\n    this.props.doingAsync(true);\n    return this.props.signupForGame();\n  }\n\n  submitAnswer(e) {\n    if (e.target.checked) {\n      // submit answer\n      this.props.doingAsync(true);\n      return this.props.submitAnswer(e.target.value);\n    }\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    this.props.getGameObject();\n  }\n\n  render() {\n    const { user, game } = this.props;\n    const {\n      username,\n      account_balance,\n      account_number,\n      bank,\n      signupForNextGameShow\n    } = user ? user : {};\n    const { game: theGame, correct, wrong, blockout } = game;\n    const { gameison } = theGame ? theGame : {};\n    console.log(theGame);\n    if (!user) {\n      return <Redirect to=\"/auth/login\" />;\n    } else {\n      return (\n        <div className=\"tp-main-container\">\n          <div className=\"tp-user-header\">\n            <h4>hi, {username}</h4>\n            <div>\n              <h4>&#8358; {account_balance.toFixed(1)}</h4>\n              <a\n                href=\"https://paystack.com/pay/topner\"\n                className=\"tp-top-up-account\"\n              >\n                Deposit\n              </a>\n            </div>\n          </div>\n          {!account_balance || !bank ? (\n            <p className=\"tp-form-note\">\n              You have not provided an account number or bank name, please\n              update your profile\n            </p>\n          ) : (\n            \"\"\n          )}\n          <div className=\"tp-question-container\">\n            {theGame && gameison && signupForNextGameShow ? (\n              <Question\n                question={theGame.question}\n                submitAnswer={this.submitAnswer}\n                correct={correct}\n                wrong={wrong}\n                blockedout={blockout}\n              />\n            ) : (\n              <p className=\"tp-form-note\">\n                ! When you are signed up for a game, and question is available\n                for answering , it will appear here\n              </p>\n            )}\n          </div>\n          <div className=\"tp-card-container\">\n            <div className=\"tp-card\" onClick={this.signUpForGame}>\n              <div className=\"tp-card-top\">\n                <h1>Bronze</h1>\n              </div>\n              <div className=\"tp-card-bottom\">\n                <div className=\"tp-entrance-fee\">\n                  <h4>Entrance fee</h4>\n                  <h4>&#8358;100</h4>\n                </div>\n                <div className=\"tp-possible-win\">\n                  <h4>Win</h4>\n                  <h4>upto 100k</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Howitworks />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupForGame: () => {\n      return dispatch(signupForGame());\n    },\n    getGameObject: () => {\n      return dispatch(getGameObject());\n    },\n    submitAnswer: answer => {\n      return dispatch(submitAnswer(answer));\n    },\n    doingAsync: done => {\n      return dispatch(doingAsync(done));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    game: state.game\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"tp-loader-container\">\n      <div className=\"tp-loader\">\n        <div className=\"tp-load tp-loader1\" />\n        <div className=\"tp-load tp-loader2\" />\n        <div className=\"tp-load tp-loader3\" />\n        <h3 style={{ color: \"#fff\" }}>Loading...</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setGameObject } from \"../../store/actions/gameAction\";\nimport { setActiveUser } from \"../../store/actions/authActions\";\nimport actions from \"../../io/actions\";\nimport { doingAsync } from \"../../store/actions/componentActions\";\nconst {\n  error,\n  success,\n  setuser,\n  setgameobject,\n  blockout,\n  youwin,\n  wronganswer,\n  totalwinnersreached\n} = actions;\nclass Io extends Component {\n  componentWillMount() {\n    const { toast } = this.props;\n    toast.configure({\n      autoClose: false\n    });\n  }\n  componentDidMount() {\n    const Socket = this.props.Socket;\n    const { toast } = this.props;\n    Socket.on(error, response => {\n      const id = 1;\n      if (toast.isActive(id)) {\n        toast.dismiss(id);\n        toast(response, {\n          toastId: id,\n          delay: 50,\n          type: toast.TYPE.INFO,\n          className: \"tp-toast-error\"\n        });\n      } else {\n        toast(response, {\n          toastId: id,\n          delay: 50,\n          type: toast.TYPE.INFO,\n          className: \"tp-toast-error\"\n        });\n      }\n      this.props.doingAsync(false);\n    });\n\n    Socket.on(success, response => {\n      const id = 2;\n      toast.dismiss(id);\n      toast(response, {\n        toastId: id,\n        delay: 50,\n        type: toast.TYPE.INFO,\n        className: \"tp-toast-success\"\n      });\n      this.props.doingAsync(false);\n    });\n\n    Socket.on(setuser, user => {\n      console.log(\"user is emitted\");\n      console.log(\"user: \", user);\n      return this.props.setActiveUser(user);\n    });\n\n    Socket.on(setgameobject, game => {\n      this.props.setGameObject(game);\n    });\n\n    Socket.on(blockout, response => {\n      toast.update(\"Blocked out\", {\n        delay: 5000,\n        type: toast.TYPE.INFO,\n        className: \"tp-toast-error\"\n      });\n    });\n\n    Socket.on(totalwinnersreached, response => {\n      this.props.doingAsync(false);\n      return toast(response, {\n        delay: 50,\n        type: toast.TYPE.INFO,\n        className: \"tp-toast-success\"\n      });\n    });\n\n    Socket.on(youwin, response => {\n      console.log(\"i win\");\n      this.props.doingAsync(false);\n      return toast(response, {\n        delay: 50,\n        type: toast.TYPE.INFO,\n        className: \"tp-toast-success\"\n      });\n    });\n\n    Socket.on(wronganswer, response => {\n      const id = 6;\n      if (toast.isActive(id)) {\n        toast.dismiss(id);\n        toast(response, {\n          toastId: id,\n          delay: 50,\n          type: toast.TYPE.INFO,\n          className: \"tp-toast-error\"\n        });\n      } else {\n        toast(response, {\n          toastId: id,\n          delay: 50,\n          type: toast.TYPE.INFO,\n          className: \"tp-toast-error\"\n        });\n      }\n    });\n  }\n  render() {\n    return null;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGameObject: game => {\n      return dispatch(setGameObject(game));\n    },\n    setActiveUser: user => {\n      return dispatch(setActiveUser(user));\n    },\n    doingAsync: done => {\n      return dispatch(doingAsync(done));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return { Socket: state.components.Socket };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Io);\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"tp-ring\">\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateUserProfile } from \"../../store/actions/authActions\";\nimport { updateProfileInputAction } from \"../../store/actions/inputActions\";\n\nclass UpdateProfile extends Component {\n  constructor() {\n    super();\n\n    this.updateUserProfile = this.updateUserProfile.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    console.log(id, \" \", value);\n    this.props.updateProfileInputAction({ id, value });\n  }\n  updateUserProfile(e) {\n    const { input_data } = this.props;\n    e.preventDefault();\n    this.props.updateUserProfile(input_data);\n  }\n  render() {\n    const { user, input_data } = this.props;\n    const { name, account_number, bank } = user ? user : {};\n    const {\n      name: inputName,\n      bank: bankInputName,\n      account_number: accountNumber\n    } = input_data;\n    return (\n      <div className=\"tp-updateprofile-container\">\n        <div className=\"tp-updateprofile-user\" />\n        <div className=\"tp-auth-container\">\n          <h2 className=\"tp-auth-title\">Update profile</h2>\n          <form onSubmit={this.updateUserProfile}>\n            <h5>{name}</h5>\n            <label for=\"name\" className=\"tp-label\">\n              Name\n              <input\n                type=\"text\"\n                placeholder=\"new name\"\n                className=\"tp-input-field\"\n                required\n                value={inputName}\n                onChange={this.handleInputChange}\n                id=\"name\"\n              />\n            </label>\n            <div>\n              <h5>{bank}</h5>\n              <label htmlFor=\"bank\">Bank Name</label>\n              <select\n                id=\"bank\"\n                required\n                value={bankInputName}\n                onChange={this.handleInputChange}\n              >\n                <option disabled>Select your bank</option>\n                <option>Firstbank</option>\n                <option>UBA</option>\n                <option>Access Bank</option>\n                <option>Polaris Bank</option>\n                <option>Fidelity Bank</option>\n                <option>GTB</option>\n                <option>Eco Bank</option>\n              </select>\n            </div>\n            <div>\n              <h5>{account_number}</h5>\n              <label htmlFor=\"account_number\">Account number</label>\n              <input\n                type=\"text\"\n                placeholder=\"Account number\"\n                id=\"account_number\"\n                value={accountNumber}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div>\n              <button class=\"tp-auth-btn\">Save Changes</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    input_data: state.input.updateProfile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserProfile: data => {\n      return dispatch(updateUserProfile(data));\n    },\n    updateProfileInputAction: data => {\n      return dispatch(updateProfileInputAction(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UpdateProfile);\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/signup\";\nimport Login from \"./components/auth/login\";\nimport ResetPassword from \"./components/auth/resetpassword\";\nimport Navigation from \"./components/layout/navigation\";\nimport Dashboard from \"./components/User/dashboard\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./components/layout/loading\";\nimport Notification from \"./components/layout/notification\";\nimport IO from \"./components/layout/iolistener\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Spinner from \"./components/comps/loader\";\nimport UpdateProfile from \"./components/User/profile\";\n\nfunction App({ loading, user, doingAsync, socket }) {\n  if (loading) {\n    return <Loader />;\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n          <ToastContainer />\n          <Navigation user={user} />\n          {doingAsync && <Spinner />}\n          <Switch>\n            <Route path=\"/auth/signup\" exact component={Signup} />\n            <Route path=\"/auth/login\" exact component={Login} />\n            <Route\n              path=\"/dashboard\"\n              exact\n              render={props => <Dashboard {...props} socket={socket} />}\n            />\n            <Route\n              path=\"/auth/password-reset\"\n              exact\n              component={ResetPassword}\n            />\n            <Route\n              path=\"/update_profile\"\n              exact\n              render={props => <UpdateProfile {...props} user={user} />}\n            />\n          </Switch>\n          <IO toast={toast} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    user: state.auth.user,\n    doingAsync: state.components.doingAsync\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  login: {\n    email: \"\",\n    password: \"\"\n  },\n  resetpassword: {\n    email: \"\"\n  },\n\n  signup: {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  },\n  updateProfile: {\n    name: \"Odiagbe Osaro\",\n    bank: \"Select your bank\",\n    account_number: \"\"\n  }\n};\n\nconst inputReducer = (state = initState, action) => {\n  const { id, value } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"LOGIN_INPUT\":\n      let login = { ...state.login, [id]: value };\n      state = { ...state, login };\n      break;\n    case \"SIGNUP_INPUT\":\n      let signup = { ...state.signup, [id]: value };\n      state = { ...state, signup };\n      break;\n    case \"PASSWORD_RESET_INPUT\":\n      let resetpassword = { ...state.resetpassword, [id]: value };\n      state = { ...state, resetpassword };\n      break;\n\n    case \"UPDATE-PROFILE-INPUT\":\n      let updateProfile = { ...state.updateProfile, [id]: value };\n      state = { ...state, updateProfile };\n      break;\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default inputReducer;\n","const initState = {\n  signup: {\n    name: true,\n    email: true,\n    password: true,\n    bank: true,\n    account_number: true,\n    confirm_password: true,\n    username: true,\n    validField: [false, false, false, false, false, false, false]\n  },\n  login: {\n    email: true,\n    validfield: false\n  },\n\n  passwordreset: {\n    email: true,\n    validfield: false\n  }\n};\n\nconst validationReducer = (state = initState, action) => {\n  const { id, valid, index } = action.payload ? action.payload : {};\n\n  switch (action.type) {\n    case \"SIGNUP-VALIDATION\":\n      let checkFields = state.signup.validField;\n      checkFields[index] = valid;\n      let signup = {\n        ...state.signup,\n        [id]: valid,\n        validField: checkFields\n      };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-VALIDATION\":\n      let login = { ...state.login, email: valid, validfield: valid };\n      state = { ...state, login };\n      break;\n    case \"PASSWORD-RESET-VALIDATION\":\n      let passwordreset = {\n        ...state.passwordreset,\n        email: valid,\n        validfield: valid\n      };\n      state = { ...state, passwordreset };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default validationReducer;\n","const initState = {\n  signup: {\n    error: null,\n    success: null\n  },\n\n  login: {\n    error: null\n  }\n};\n\nconst errorReducer = (state = initState, action) => {\n  const { error, success } = action.payload || {};\n  switch (action.type) {\n    case \"SIGNUP-ERROR\":\n      const signup = { error, success };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-ERROR\":\n      console.log(error);\n      const login = { error };\n      state = { ...state, login };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default errorReducer;\n","const initState = {\n  loading: true,\n  user: null\n};\n\nconst authReducer = (state = initState, action) => {\n  // console.log(\"payload: \", action);\n  const { loading, user } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"AUTHENTICATION-END\":\n      state = { ...state, loading };\n      break;\n    case \"SET-ACTIVE-USER\":\n      console.log(user);\n      state = { ...state, user };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default authReducer;\n","const initState = {\n  logingin: false,\n  signingup: false,\n  dropdownopen: false,\n  notification: null,\n  Socket: null,\n  doingAsync: false\n};\n\nconst componentReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGING-IN-COMP\":\n      state = { ...state, logingin: action.payload };\n      break;\n    case \"SIGNING-UP-COMP\":\n      state = { ...state, signingup: action.payload };\n      break;\n    case \"DROP-COMP\":\n      let drop = state.dropdownopen ? false : true;\n      state = { ...state, dropdownopen: drop };\n      break;\n    case \"NOTIFICATION\":\n      let notification = action.payload;\n      state = { ...state, notification };\n      break;\n    case \"CREATE-SOCKET-CONNECTION\":\n      let Socket = action.payload;\n      state = { ...state, Socket };\n      break;\n    case \"DOING-ASYNC\":\n      state = { ...state, doingAsync: action.payload };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default componentReducer;\n","import actions from \"../../io/actions\";\n\nconst { setgameobject } = actions;\nconsole.log(setgameobject);\nconst initState = {\n  game: null,\n  blockout: false\n};\n\nconst gameReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"SET-GAME-OBJECT\":\n      state = { ...state, game: action.payload.game };\n      break;\n    case \"WRONG-OR-RIGHT\":\n      state = { ...state, correct: action.payload, wrong: !action.payload };\n      break;\n    case \"BLOCK-OUT\":\n      state = { ...state, blockout: action.payload };\n      break;\n    case setgameobject:\n      console.log(\"dispatched an action\");\n      state = { ...state, game: action.payload };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default gameReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./reducers/inputReducer\";\nimport validationReducer from \"./reducers/validationReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport componentReducer from \"./reducers/componentsReducer\";\nimport gameReducer from \"./reducers/gameReducer\";\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  validation: validationReducer,\n  error: errorReducer,\n  auth: authReducer,\n  components: componentReducer,\n  game: gameReducer\n});\n\nexport default rootReducer;\n","import * as IO from \"socket.io-client\";\n\nconst endPoint = \"https://topner.herokuapp.com\";\nconst Socket = IO(endPoint);\n\nexport default Socket;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/index\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { verifyAuthentication } from \"./store/actions/authActions\";\nimport Socket from \"./io/index\";\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n// somehow check if the user is logged in\nstore.dispatch(verifyAuthentication());\nconst socket = store.getState().components.Socket;\nif (!socket) {\n  store.dispatch({ type: \"CREATE-SOCKET-CONNECTION\", payload: Socket });\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App socket={Socket} />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}