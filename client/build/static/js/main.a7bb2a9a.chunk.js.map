{"version":3,"sources":["store/actions/componentActions.js","store/actions/authActions.js","components/auth/signup.js","store/actions/inputActions.js","store/actions/validationActins.js","components/auth/login.js","components/auth/resetpassword.js","components/layout/signoutlinks.js","components/layout/signinlinks.js","components/layout/navigation.js","components/layout/question.js","components/layout/howitworks.js","components/User/dashboard.js","components/layout/loading.js","components/comps/notificationSnackbar.js","App.js","serviceWorker.js","store/reducers/inputReducer.js","store/reducers/validationReducer.js","store/reducers/errorReducer.js","store/reducers/authReducer.js","store/reducers/componentsReducer.js","store/reducers/gameReducer.js","store/index.js","index.js"],"names":["logingin","value","console","log","type","payload","signingup","notify","dispatch","data","setTimeout","url","Signup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","validateField","createUserAccount","e","_e$target","target","id","props","signupInputAction","signupInputValidation","_e$target2","preventDefault","signup_input_data","_this$props","validation","auth","name","email","username","password","bank","account_number","confirm_password","validName","validEmail","validUsername","validPassword","validBank","validAccount","validConfirmPassword","signupButton","react_default","a","createElement","className","disabled","react_router","to","onSubmit","htmlFor","concat","placeholder","required","onChange","onBlur","Component","connect","state","input","signup","error","user","components","getState","valid","feedback","test","objectSpread","index","includes","signupValidation","axios","post","withCredentials","then","res","_res$data","success","message","catch","err","Login","logUserIn","loginInputAction","loguserin","login_input_data","loginButton","react_router_dom","login","loginValidation","_res$data2","jwt","ResetPassword","passwordResetInputAction","passwordResetValidation","resetpassword_input_data","validfield","resetpassword","passwordreset","SignedOutLinks","Fragment","activeClassName","exact","dropdown","dropdownopen","loguserout","openDropdown","_ref","onClick","href","Navigation","link","signinlinks","signoutlinks","Question","question","options_","options","map","class","Howitworks","Dashboard","game","toFixed","layout_question","howitworks","Loader","Notification","loading","notification","layout_loading","notificationSnackbar","navigation","path","component","Boolean","window","location","hostname","match","initState","inputReducer","arguments","length","undefined","action","defineProperty","validField","validationReducer","_objectSpread2","checkFields","errorReducer","authReducer","componentReducer","drop","gameReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","get","_res$data3","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7bb2a9a.chunk.js","sourcesContent":["export const logingin = value => {\n  console.log(\"loggin in \", value);\n  return {\n    type: \"LOGING-IN-COMP\",\n    payload: value\n  };\n};\n\nexport const signingup = value => {\n  return {\n    type: \"SIGNING-UP-COMP\",\n    payload: value\n  };\n};\n\nexport const openDropDown = () => {\n  console.log(\"opening drop down action \");\n  return {\n    type: \"DROP-COMP\",\n    payload: null\n  };\n};\n\nexport const notify = (dispatch, data) => {\n  dispatch({ type: \"NOTIFICATION\", payload: data });\n  setTimeout(() => {\n    dispatch({ type: \"NOTIFICATION\", payload: null });\n  }, 5000);\n};\n","import axios from \"axios\";\nimport { logingin, signingup, notify } from \"../actions/componentActions\";\nimport * as jwt from \"jsonwebtoken\";\n\nconst url = \"https://topner.herokuapp.com/\";\n\nexport const createUserAccount = data => {\n  return dispatch => {\n    dispatch(signingup(true));\n    axios\n      .post(`${url}auth/signup`, data, { withCredentials: true })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"SIGNUP-ERROR\",\n            payload: { error: error.message, success: null }\n          });\n          dispatch(signingup(false));\n          notify(dispatch, { type: \"Signup error\", message: error.message });\n        } else {\n          dispatch({\n            type: \"SIGNUP-SUCCESS\",\n            payload: { error: null, success: success.message }\n          });\n\n          notify(dispatch, {\n            type: \"Account created\",\n            message: success.message\n          });\n        }\n\n        dispatch(signingup(false));\n      })\n      .catch(err => {\n        dispatch({\n          type: \"SIGNUP-ERROR\",\n          payload: err.message\n        });\n\n        dispatch(signingup(false));\n        notify(dispatch, { type: \"Signup error\", message: err.message });\n      });\n  };\n};\n\nexport const logUserIn = data => {\n  return dispatch => {\n    dispatch(logingin(true));\n    axios\n      .post(`${url}auth/login`, data, { withCredentials: true })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"LOGIN-ERROR\",\n            payload: { error }\n          });\n          dispatch(logingin(false));\n          notify(dispatch, {\n            type: \"Login error\",\n            message: \"Invalid credentials, try again\"\n          });\n        } else {\n          let user = jwt.verify(success.auth, \"posiedonathenazeuskratoshydra\");\n          dispatch({ type: \"SET-ACTIVE-USER\", payload: { user: user.auth } });\n          dispatch(logingin(false));\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({\n          type: \"LOGIN-ERROR\",\n          payload: { error: \"Invalid credentials provided\" }\n        });\n        dispatch(logingin(false));\n        notify(dispatch, {\n          type: \"Login error\",\n          message: \"Invalid Credentials try again\"\n        });\n      });\n  };\n};\n\nexport const verifyAuthentication = () => {\n  return dispatch => {\n    axios\n      .get(`${url}auth/verify_authentication`, {\n        withCredentials: true\n      })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false, user: null }\n          });\n        } else {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false, user: success.auth }\n          });\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: \"AUTHENTICATION-END\",\n          payload: { loading: false, user: null }\n        });\n      });\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    axios.post(`${url}auth/logout`, {}, { withCredentials: true }).then(res => {\n      const { error } = res.data;\n      if (error) {\n      } else {\n        dispatch({\n          type: \"SET-ACTIVE-USER\",\n          payload: { user: null }\n        });\n      }\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupInputAction } from \"../../store/actions/inputActions\";\nimport { signupValidation } from \"../../store/actions/validationActins\";\nimport { createUserAccount } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.createUserAccount = this.createUserAccount.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.signupInputAction({ id, value });\n    this.props.signupInputValidation({ id, value });\n  }\n\n  validateField(e) {\n    const { id, value } = e.target;\n    this.props.signupInputValidation({ id, value });\n  }\n\n  createUserAccount(e) {\n    e.preventDefault();\n    this.props.createUserAccount(this.props.signup_input_data);\n  }\n\n  render() {\n    const { signup_input_data, validation, auth, signingup } = this.props;\n    const {\n      name,\n      email,\n      username,\n      password,\n      bank,\n      account_number,\n      confirm_password\n    } = signup_input_data;\n    const {\n      name: validName,\n      email: validEmail,\n      username: validUsername,\n      password: validPassword,\n      bank: validBank,\n      account_number: validAccount,\n      confirm_password: validConfirmPassword\n    } = validation;\n    const signupButton = signingup ? (\n      <button className=\"tp-auth-btn\" disabled={true}>\n        <i className=\"fas fa-circle-notch fa-spin\" /> Creating account...\n      </button>\n    ) : (\n      <button className=\"tp-auth-btn\" disabled={false}>\n        Create Account\n      </button>\n    );\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Sign up</h2>\n        <form onSubmit={this.createUserAccount}>\n          <div>\n            <label htmlFor=\"name\">Fullname</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validName ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"John Doe\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name must match the name in your bank account\n            </p>\n            {!validName && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              id=\"email\"\n              required\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">*email is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validUsername ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Username\"\n              id=\"username\"\n              required\n              value={username}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Username can only have letters and _\n            </p>\n            {!validUsername && (\n              <p className=\"tp-field-error\">\n                *Username can contain only letters and _\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"bank\">Bank Name</label>\n            <select\n              id=\"bank\"\n              className={`tp-input-field ${\n                validBank ? \"\" : \"tp-invalid-field\"\n              }`}\n              required\n              value={bank}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            >\n              <option disabled>Select your bank</option>\n              <option>Firstbank</option>\n              <option>UBA</option>\n              <option>Access Bank</option>\n              <option>Polaris Bank</option>\n              <option>Fidelity Bank</option>\n              <option>GTB</option>\n              <option>Eco Bank</option>\n            </select>\n            {!validBank && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"account_number\">Account Number</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validAccount ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Account Number\"\n              id=\"account_number\"\n              required\n              value={account_number}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name in account must match name provided above\n            </p>\n            {!validAccount && (\n              <p className=\"tp-field-error\">\n                * Account should be numbers and not more or less than ten in\n                length\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Password\"\n              id=\"password\"\n              required\n              value={password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <div className=\"tp-form-note\">\n              <p>* must have an uppercase</p>\n              <p>* must have a lowercase</p>\n              <p>* must have a number</p>\n              <p>* must have any of this #$^+=!*()@%&</p>\n            </div>\n            {!validPassword && (\n              <p className=\"tp-field-error\">\n                *password must contain numbers,lowercase, uppercas, any of this\n                [@#$%..]\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validConfirmPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Confirm Password\"\n              id=\"confirm_password\"\n              required\n              value={confirm_password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validConfirmPassword && (\n              <p className=\"tp-field-error\">*passwords do not match</p>\n            )}\n          </div>\n          <div>{signupButton}</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signup_input_data: state.input.signup,\n    validation: state.validation.signup,\n    error: state.error.signup,\n    auth: state.auth.user,\n    signingup: state.components.signingup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupInputAction: data => {\n      dispatch(signupInputAction(data));\n    },\n    signupInputValidation: data => {\n      dispatch(signupValidation(data));\n    },\n    createUserAccount: data => {\n      dispatch(createUserAccount(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","export const signupInputAction = data => {\n  return { type: \"SIGNUP_INPUT\", payload: data };\n};\n\nexport const loginInputAction = data => {\n  return { type: \"LOGIN_INPUT\", payload: data };\n};\n\nexport const passwordResetInputAction = data => {\n  return { type: \"PASSWORD_RESET_INPUT\", payload: data };\n};\n","export const signupValidation = data => {\n  return (dispatch, getState) => {\n    const { id, value } = data;\n    let valid;\n    // declare regular expressions for fields\n    let feedback = { type: \"SIGNUP-VALIDATION\", payload: { id, valid: null } };\n    //\n    let usernameRegex = /^[a-z0-9-_A-Z]{6,30}$/;\n    let accountNumberRegex = /^[0-9]{10}$/;\n    let nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;\n    let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/;\n    let banks = [\n      \"Firstbank\",\n      \"GTB\",\n      \"Polaris Bank\",\n      \"Access Bank\",\n      \"UBA\",\n      \"Fidelity Bank\",\n      \"Eco Bank\"\n    ];\n    switch (id) {\n      case \"name\":\n        valid = nameRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 0 } };\n        break;\n      case \"email\":\n        valid = emailRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 1 } };\n        break;\n      case \"password\":\n        const confirmPassword = getState().input.signup.confirm_password;\n        dispatch({\n          type: \"SIGNUP-VALIDATION\",\n          payload: {\n            id: \"confirm_password\",\n            valid: confirmPassword === value,\n            index: 5\n          }\n        });\n        valid = passwordRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 5 }\n        };\n        break;\n      case \"bank\":\n        valid = banks.includes(value);\n        feedback = { ...feedback, payload: { id, valid, index: 3 } };\n        break;\n      case \"account_number\":\n        valid = accountNumberRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 4 }\n        };\n        break;\n      case \"confirm_password\":\n        let password = getState().input.signup.password;\n        valid = value === password;\n        feedback = { ...feedback, payload: { id, valid, index: 6 } };\n        break;\n      case \"username\":\n        valid = usernameRegex.test(value);\n        let payload = { id, valid, index: 2 };\n        feedback = { ...feedback, payload };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(feedback);\n  };\n};\n\nexport const loginValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"LOGIN-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n\nexport const passwordResetValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"PASSWORD-RESET-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginInputAction } from \"../../store/actions/inputActions\";\nimport { loginValidation } from \"../../store/actions/validationActins\";\nimport { logUserIn } from \"../../store/actions/authActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.logUserIn = this.logUserIn.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.loginInputAction({ id, value });\n    //his.props.loginValidation(value);\n  }\n\n  validateField(e) {\n    //this.props.loginValidation(e.target.value);\n  }\n\n  logUserIn(e) {\n    e.preventDefault();\n    this.props.loguserin(this.props.login_input_data);\n  }\n\n  render() {\n    const { login_input_data, validation, auth, logingin } = this.props;\n\n    const { email, password } = login_input_data;\n    const { email: validEmail } = validation;\n    const loginButton = logingin ? (\n      <button className=\"tp-auth-btn\" disabled={true}>\n        <i className=\"fas fa-circle-notch fa-spin\" /> Loging in...\n      </button>\n    ) : (\n      <button className=\"tp-auth-btn\" disabled={false}>\n        Log in\n      </button>\n    );\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Login</h2>\n        <form onSubmit={this.logUserIn}>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is invalid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              required\n              className=\"tp-input-field\"\n              value={password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>{loginButton}</div>\n          <div>\n            <p>\n              <Link to=\"/auth/password-reset\" className=\"tp-forgot-password\">\n                Forgot Password\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    login_input_data: state.input.login,\n    validation: state.validation.login,\n    auth: state.auth.user,\n    error: state.error.login,\n    logingin: state.components.logingin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginInputAction: data => {\n      dispatch(loginInputAction(data));\n    },\n    loginValidation: data => {\n      dispatch(loginValidation(data));\n    },\n    loguserin: data => {\n      return dispatch(logUserIn(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { passwordResetInputAction } from \"../../store/actions/inputActions\";\nimport { passwordResetValidation } from \"../../store/actions/validationActins\";\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.passwordResetInputAction({ id, value });\n    this.props.passwordResetValidation(value);\n  }\n\n  validateField(e) {\n    this.props.passwordResetValidation(e.target.value);\n  }\n  render() {\n    const { validation, resetpassword_input_data } = this.props;\n    const { email } = resetpassword_input_data;\n    const { email: validEmail, validfield } = validation;\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Password Reset</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              id=\"email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is not valid</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={!validfield}>\n              Send reset link\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    resetpassword_input_data: state.input.resetpassword,\n    validation: state.validation.passwordreset\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    passwordResetInputAction: data => {\n      dispatch(passwordResetInputAction(data));\n    },\n    passwordResetValidation: data => {\n      dispatch(passwordResetValidation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/login\">\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/signup\">\n          Signup\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport { openDropDown } from \"../../store/actions/componentActions\";\n\nconst SignedInLink = ({ user, loguserout, dropdown, openDropdown }) => {\n  return (\n    <React.Fragment>\n      <li>\n        <div className=\"tp-initials\" onClick={openDropdown}>\n          <span>{user.username[0]}</span>\n          <div className={`tp-drop-down ${dropdown ? \"tp-open\" : \"\"}`}>\n            <ul>\n              <li>\n                <Link to=\"/complaint\">Send a Complaint</Link>\n              </li>\n\n              <li>\n                <a href=\"javascript:void(0)\" onClick={loguserout}>\n                  logout\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </li>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    dropdown: state.components.dropdownopen\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    loguserout: e => {\n      e.preventDefault();\n      return dispatch(logout());\n    },\n    openDropdown: () => {\n      return dispatch(openDropDown());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignedInLink);\n","import React from \"react\";\nimport SignoutLinks from \"./signoutlinks\";\nimport SignedInLink from \"./signinlinks\";\n\nconst Navigation = ({ user }) => {\n  console.log(user);\n  const link = user ? <SignedInLink user={user} /> : <SignoutLinks />;\n  return (\n    <nav className=\"tp-navigation\">\n      <a href=\"#default\" className=\"tp-brand\">\n        Topners\n      </a>\n      <ul>{link}</ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nconst Question = ({ question }) => {\n  let options_ = question.options.map(value => {\n    return (\n      <label className=\"tp-radio-container\">\n        {value}\n        <input type=\"radio\" name=\"answer\" />\n        <span class=\"tp-checkmark\" />\n      </label>\n    );\n  });\n  return (\n    <React.Fragment>\n      <h3 className=\"tp-question-head\">{question.question}</h3>\n      <form>\n        <div>{options_}</div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default Question;\n","import React from \"react\";\n\nconst Howitworks = () => {\n  return (\n    <div className=\"tp-how-it-works\">\n      <div className=\"tp-step\">\n        <h4>Step 1</h4>\n        <h5>Deposit into your accout</h5>\n        <p>\n          The very first step is to pay money into your account, account with\n          amount less than 100 would be blocked out of joining games\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 2</h4>\n        <h5>Sign up for game</h5>\n        <p>\n          After depositing into your account, the next step is to sign up for a\n          game, then wait to recieve questions for answering\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 3</h4>\n        <h5>Got question?, be smart and fast</h5>\n        <p>\n          Questions are posted every{\" \"}\n          <b>\n            Sunday, at 7:30pm, dont just get them right, you need to be fast and\n            fall among the top people, because only the <b>Topners</b> win\n          </b>\n        </p>\n      </div>\n\n      <div className=\"tp-step\">\n        <h4>Step 1</h4>\n        <h5>I won , time to get paid</h5>\n        <p>\n          The best part, payments are made during the following week after\n          previous game, please note that payments are made into the provided\n          account number\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Howitworks;\n","import React, { Component } from \"react\";\nimport \"./userstyle.css\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Question from \"../layout/question\";\nimport Howitworks from \"../layout/howitworks\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    //\n  }\n  render() {\n    let number = 500;\n    const { user, game } = this.props;\n    console.log(game);\n    const { username } = user ? user : {};\n    const { question } = game;\n\n    if (!user) {\n      return <Redirect to=\"/auth/login\" />;\n    } else {\n      return (\n        <div className=\"tp-main-container\">\n          <div className=\"tp-user-header\">\n            <h4>hi, {username}</h4>\n            <div>\n              <h4>&#8358;{number.toFixed(1)}</h4>\n              <button className=\"tp-top-up-account\">Deposit</button>\n            </div>\n          </div>\n          <div className=\"tp-question-container\">\n            {question ? (\n              <Question question={question} />\n            ) : (\n              <p className=\"tp-form-note\">\n                ! When you are signed up for a game, and question is available\n                for answering , it will appear here\n              </p>\n            )}\n          </div>\n          <div className=\"tp-card-container\">\n            <div className=\"tp-card\">\n              <div className=\"tp-card-top\">\n                <h1>Bronze</h1>\n              </div>\n              <div className=\"tp-card-bottom\">\n                <div className=\"tp-entrance-fee\">\n                  <h4>Entrance fee</h4>\n                  <h4>&#8358;100</h4>\n                </div>\n                <div className=\"tp-possible-win\">\n                  <h4>Win</h4>\n                  <h4>upto 100k</h4>\n                </div>\n                <div className=\"tp-enter-context\">\n                  <button className=\"tp-enter-context-btn\">Enter bronze</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Howitworks />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    game: state.game\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"tp-loader-container\">\n      <h1>Hold on hoss checking authentication status</h1>\n      <p>Wait a little bit......</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nconst Notification = ({ data }) => {\n  const { type, message } = data;\n  console.log(data);\n  return (\n    <div className=\"tp-notification-snackbar\">\n      <h4 className=\"tp-notification-header\">{type}</h4>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/signup\";\nimport Login from \"./components/auth/login\";\nimport ResetPassword from \"./components/auth/resetpassword\";\nimport Navigation from \"./components/layout/navigation\";\nimport Dashboard from \"./components/User/dashboard\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./components/layout/loading\";\nimport Notification from \"./components/comps/notificationSnackbar\";\n\nfunction App({ loading, user, notification }) {\n  if (loading) {\n    return <Loader />;\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n          {notification ? <Notification data={notification} /> : \"\"}\n          <Navigation user={user} />\n          <Switch>\n            <Route path=\"/auth/signup\" exact component={Signup} />\n            <Route path=\"/auth/login\" exact component={Login} />\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n            <Route\n              path=\"/auth/password-reset\"\n              exact\n              component={ResetPassword}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    user: state.auth.user,\n    notification: state.components.notification\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  login: {\n    email: \"\",\n    password: \"\"\n  },\n  resetpassword: {\n    email: \"\"\n  },\n\n  signup: {\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    bank: \"Select your bank\",\n    account_number: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  }\n};\n\nconst inputReducer = (state = initState, action) => {\n  const { id, value } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"LOGIN_INPUT\":\n      let login = { ...state.login, [id]: value };\n      state = { ...state, login };\n      break;\n    case \"SIGNUP_INPUT\":\n      let signup = { ...state.signup, [id]: value };\n      state = { ...state, signup };\n      break;\n    case \"PASSWORD_RESET_INPUT\":\n      let resetpassword = { ...state.resetpassword, [id]: value };\n      state = { ...state, resetpassword };\n      break;\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default inputReducer;\n","const initState = {\n  signup: {\n    name: true,\n    email: true,\n    password: true,\n    bank: true,\n    account_number: true,\n    confirm_password: true,\n    username: true,\n    validField: [false, false, false, false, false, false, false]\n  },\n  login: {\n    email: true,\n    validfield: false\n  },\n\n  passwordreset: {\n    email: true,\n    validfield: false\n  }\n};\n\nconst validationReducer = (state = initState, action) => {\n  const { id, valid, index } = action.payload ? action.payload : {};\n\n  switch (action.type) {\n    case \"SIGNUP-VALIDATION\":\n      let checkFields = state.signup.validField;\n      checkFields[index] = valid;\n      let signup = {\n        ...state.signup,\n        [id]: valid,\n        validField: checkFields\n      };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-VALIDATION\":\n      let login = { ...state.login, email: valid, validfield: valid };\n      state = { ...state, login };\n      break;\n    case \"PASSWORD-RESET-VALIDATION\":\n      let passwordreset = {\n        ...state.passwordreset,\n        email: valid,\n        validfield: valid\n      };\n      state = { ...state, passwordreset };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default validationReducer;\n","const initState = {\n  signup: {\n    error: null,\n    success: null\n  },\n\n  login: {\n    error: null\n  }\n};\n\nconst errorReducer = (state = initState, action) => {\n  const { error, success } = action.payload || {};\n  switch (action.type) {\n    case \"SIGNUP-ERROR\":\n      const signup = { error, success };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-ERROR\":\n      console.log(error);\n      const login = { error };\n      state = { ...state, login };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default errorReducer;\n","const initState = {\n  loading: true,\n  user: null\n};\n\nconst authReducer = (state = initState, action) => {\n  // console.log(\"payload: \", action);\n  const { loading, user } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"AUTHENTICATION-END\":\n      state = { ...state, loading, user };\n      break;\n    case \"SET-ACTIVE-USER\":\n      console.log(user);\n      state = { ...state, user };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default authReducer;\n","const initState = {\n  logingin: false,\n  signingup: false,\n  dropdownopen: false,\n  notification: null\n};\n\nconst componentReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGING-IN-COMP\":\n      state = { ...state, logingin: action.payload };\n      break;\n    case \"SIGNING-UP-COMP\":\n      state = { ...state, signingup: action.payload };\n      break;\n    case \"DROP-COMP\":\n      let drop = state.dropdownopen ? false : true;\n      state = { ...state, dropdownopen: drop };\n      break;\n    case \"NOTIFICATION\":\n      console.log(\"doing notification\");\n      let notification = action.payload;\n      state = { ...state, notification };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default componentReducer;\n","const initState = {\n  question: {\n    question: \"Who is the president of Nigeria ?\",\n    options: [\n      \"Mohammadu Buhari\",\n      \"Jayjay Okocha\",\n      \"Desmond elliot\",\n      \"none of the above\"\n    ]\n  }\n};\n\nconst gameReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"RESET-QUESTION\":\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default gameReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./reducers/inputReducer\";\nimport validationReducer from \"./reducers/validationReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport componentReducer from \"./reducers/componentsReducer\";\nimport gameReducer from \"./reducers/gameReducer\";\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  validation: validationReducer,\n  error: errorReducer,\n  auth: authReducer,\n  components: componentReducer,\n  game: gameReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/index\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { verifyAuthentication } from \"./store/actions/authActions\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n// somehow check if the user is logged in\nstore.dispatch(verifyAuthentication());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}