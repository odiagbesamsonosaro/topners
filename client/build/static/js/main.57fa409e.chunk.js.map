{"version":3,"sources":["components/auth/signup.js","store/actions/inputActions.js","store/actions/validationActins.js","store/actions/authActions.js","components/auth/login.js","components/auth/resetpassword.js","components/layout/signoutlinks.js","components/layout/signinlinks.js","components/layout/navigation.js","components/User/dashboard.js","components/layout/loading.js","App.js","serviceWorker.js","store/reducers/inputReducer.js","store/reducers/validationReducer.js","store/reducers/errorReducer.js","store/reducers/authReducer.js","store/index.js","index.js"],"names":["Signup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","validateField","createUserAccount","e","_e$target","target","id","value","props","signupInputAction","signupInputValidation","_e$target2","preventDefault","signup_input_data","_this$props","validation","error","auth","name","email","username","password","bank","account_number","confirm_password","validName","validEmail","validUsername","validPassword","validBank","validAccount","validConfirmPassword","validField","signupError","validform","includes","react_default","a","createElement","react_router","to","className","onSubmit","htmlFor","type","concat","placeholder","required","onChange","onBlur","disabled","Component","connect","state","input","signup","user","dispatch","data","payload","getState","valid","feedback","test","objectSpread","index","signupValidation","console","log","axios","post","then","res","_res$data","success","message","catch","err","Login","logUserIn","loginInputAction","loguserin","login_input_data","loginError","validfield","react_router_dom","login","loginValidation","withCredentials","_res$data2","jwt","ResetPassword","passwordResetInputAction","passwordResetValidation","resetpassword_input_data","resetpassword","passwordreset","SignedOutLinks","Fragment","activeClassName","exact","loguserout","_res$data4","_ref","href","onClick","Navigation","link","signinlinks","signoutlinks","Dashboard","toFixed","Loader","loading","layout_loading","navigation","path","component","Boolean","window","location","hostname","match","initState","inputReducer","arguments","length","undefined","action","defineProperty","validationReducer","_objectSpread2","checkFields","errorReducer","authReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","get","_res$data3","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57fa409e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signupInputAction } from \"../../store/actions/inputActions\";\nimport { signupValidation } from \"../../store/actions/validationActins\";\nimport { createUserAccount } from \"../../store/actions/authActions\";\nimport { stat } from \"fs\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.createUserAccount = this.createUserAccount.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.signupInputAction({ id, value });\n    this.props.signupInputValidation({ id, value });\n  }\n\n  validateField(e) {\n    const { id, value } = e.target;\n    this.props.signupInputValidation({ id, value });\n  }\n\n  createUserAccount(e) {\n    e.preventDefault();\n    this.props.createUserAccount(this.props.signup_input_data);\n  }\n\n  render() {\n    const { signup_input_data, validation, error, auth } = this.props;\n    const {\n      name,\n      email,\n      username,\n      password,\n      bank,\n      account_number,\n      confirm_password\n    } = signup_input_data;\n    const {\n      name: validName,\n      email: validEmail,\n      username: validUsername,\n      password: validPassword,\n      bank: validBank,\n      account_number: validAccount,\n      confirm_password: validConfirmPassword,\n      validField\n    } = validation;\n    const { error: signupError } = error;\n    const validform = validField.includes(false);\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Sign up</h2>\n        {signupError && <p className=\"tp-field-error\">{signupError}</p>}\n        <form onSubmit={this.createUserAccount}>\n          <div>\n            <label htmlFor=\"name\">Fullname</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validName ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"John Doe\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name must match the name in your bank account\n            </p>\n            {!validName && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              id=\"email\"\n              required\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">*email is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validUsername ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Username\"\n              id=\"username\"\n              required\n              value={username}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Username can only have letters and _\n            </p>\n            {!validUsername && (\n              <p className=\"tp-field-error\">\n                *Username can contain only letters and _\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"bank\">Bank Name</label>\n            <select\n              id=\"bank\"\n              className={`tp-input-field ${\n                validBank ? \"\" : \"tp-invalid-field\"\n              }`}\n              required\n              value={bank}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            >\n              <option disabled>Select your bank</option>\n              <option>Firstbank</option>\n              <option>UBA</option>\n              <option>Access Bank</option>\n              <option>Polaris Bank</option>\n              <option>Fidelity Bank</option>\n              <option>GTB</option>\n              <option>Eco Bank</option>\n            </select>\n            {!validBank && (\n              <p className=\"tp-field-error\">*field is not valid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"account_number\">Account Number</label>\n            <input\n              type=\"text\"\n              className={`tp-input-field ${\n                validAccount ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Account Number\"\n              id=\"account_number\"\n              required\n              value={account_number}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <p className=\"tp-form-note\">\n              * Name in account must match name provided above\n            </p>\n            {!validAccount && (\n              <p className=\"tp-field-error\">\n                * Account should be numbers and not more or less than ten in\n                length\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Password\"\n              id=\"password\"\n              required\n              value={password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            <div className=\"tp-form-note\">\n              <p>* must have an uppercase</p>\n              <p>* must have a lowercase</p>\n              <p>* must have a number</p>\n              <p>* must have any of this #$^+=!*()@%&</p>\n            </div>\n            {!validPassword && (\n              <p className=\"tp-field-error\">\n                *password must contain numbers,lowercase, uppercas, any of this\n                [@#$%..]\n              </p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              className={`tp-input-field ${\n                validConfirmPassword ? \"\" : \"tp-invalid-field\"\n              }`}\n              placeholder=\"Confirm Password\"\n              id=\"confirm_password\"\n              required\n              value={confirm_password}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validConfirmPassword && (\n              <p className=\"tp-field-error\">*passwords do not match</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={validform}>\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signup_input_data: state.input.signup,\n    validation: state.validation.signup,\n    error: state.error.signup,\n    auth: state.auth.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupInputAction: data => {\n      dispatch(signupInputAction(data));\n    },\n    signupInputValidation: data => {\n      dispatch(signupValidation(data));\n    },\n    createUserAccount: data => {\n      dispatch(createUserAccount(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","export const signupInputAction = data => {\n  return { type: \"SIGNUP_INPUT\", payload: data };\n};\n\nexport const loginInputAction = data => {\n  return { type: \"LOGIN_INPUT\", payload: data };\n};\n\nexport const passwordResetInputAction = data => {\n  return { type: \"PASSWORD_RESET_INPUT\", payload: data };\n};\n","export const signupValidation = data => {\n  return (dispatch, getState) => {\n    const { id, value } = data;\n    let valid;\n    // declare regular expressions for fields\n    let feedback = { type: \"SIGNUP-VALIDATION\", payload: { id, valid: null } };\n    //\n    let usernameRegex = /^[a-z0-9-_A-Z]{6,30}$/;\n    let accountNumberRegex = /^[0-9]{10}$/;\n    let nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/;\n    let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    let passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,30}$/;\n    let banks = [\n      \"Firstbank\",\n      \"GTB\",\n      \"Polaris Bank\",\n      \"Access Bank\",\n      \"UBA\",\n      \"Fidelity Bank\",\n      \"Eco Bank\"\n    ];\n    switch (id) {\n      case \"name\":\n        valid = nameRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 0 } };\n        break;\n      case \"email\":\n        valid = emailRegex.test(value);\n        feedback = { ...feedback, payload: { id, valid, index: 1 } };\n        break;\n      case \"password\":\n        const confirmPassword = getState().input.signup.confirm_password;\n        dispatch({\n          type: \"SIGNUP-VALIDATION\",\n          payload: {\n            id: \"confirm_password\",\n            valid: confirmPassword === value,\n            index: 5\n          }\n        });\n        valid = passwordRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 5 }\n        };\n        break;\n      case \"bank\":\n        valid = banks.includes(value);\n        feedback = { ...feedback, payload: { id, valid, index: 3 } };\n        break;\n      case \"account_number\":\n        valid = accountNumberRegex.test(value);\n        feedback = {\n          ...feedback,\n          payload: { id, valid, index: 4 }\n        };\n        break;\n      case \"confirm_password\":\n        let password = getState().input.signup.password;\n        valid = value === password;\n        feedback = { ...feedback, payload: { id, valid, index: 6 } };\n        break;\n      case \"username\":\n        valid = usernameRegex.test(value);\n        let payload = { id, valid, index: 2 };\n        feedback = { ...feedback, payload };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(feedback);\n  };\n};\n\nexport const loginValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"LOGIN-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n\nexport const passwordResetValidation = email => {\n  let emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return {\n    type: \"PASSWORD-RESET-VALIDATION\",\n    payload: { valid: emailRegex.test(email) }\n  };\n};\n","import axios from \"axios\";\nimport * as jwt from \"jsonwebtoken\";\n\nexport const createUserAccount = data => {\n  return dispatch => {\n    console.log(\"creating user account\");\n    axios\n      .post(\"http://localhost:5000/auth/signup\", data)\n      .then(res => {\n        console.log(res.data);\n        const { error, success } = res.data;\n        if (error) {\n          return dispatch({\n            type: \"SIGNUP-ERROR\",\n            payload: { error: error.message, success: null }\n          });\n        }\n        return dispatch({\n          type: \"SIGNUP-SUCCESS\",\n          payload: { error: null, success: success.message }\n        });\n      })\n      .catch(err => {\n        return dispatch({\n          type: \"SIGNUP-ERROR\",\n          payload: err.message\n        });\n      });\n  };\n};\n\nexport const logUserIn = data => {\n  console.log(data);\n  console.log(\"loggin user in\");\n  return dispatch => {\n    axios\n      .post(\"http://localhost:5000/auth/login\", data, { withCredentials: true })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n          dispatch({\n            type: \"LOGIN-ERROR\",\n            payload: { error }\n          });\n        } else {\n          let user = jwt.verify(success.auth, \"posiedonathenazeuskratoshydra\");\n          console.log(user);\n          dispatch({ type: \"SET-ACTIVE-USER\", payload: { user: user.auth } });\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: \"LOGIN-ERROR\",\n          payload: { error: \"Invalid credentials provided\" }\n        });\n      });\n  };\n};\n\nexport const verifyAuthentication = () => {\n  return dispatch => {\n    axios\n      .get(\"http://localhost:5000/auth/verify_authentication\", {\n        withCredentials: true\n      })\n      .then(res => {\n        const { error, success } = res.data;\n        console.log(res.data);\n        if (error) {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false, user: null }\n          });\n        } else {\n          dispatch({\n            type: \"AUTHENTICATION-END\",\n            payload: { loading: false, user: success.auth }\n          });\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: \"AUTHENTICATION-END\",\n          payload: { loading: false, user: null }\n        });\n      });\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    axios\n      .post(\"http://localhost:5000/auth/logout\", {}, { withCredentials: true })\n      .then(res => {\n        const { error, success } = res.data;\n        if (error) {\n        } else {\n          dispatch({\n            type: \"SET-ACTIVE-USER\",\n            payload: { user: null }\n          });\n        }\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginInputAction } from \"../../store/actions/inputActions\";\nimport { loginValidation } from \"../../store/actions/validationActins\";\nimport { logUserIn } from \"../../store/actions/authActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.logUserIn = this.logUserIn.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.loginInputAction({ id, value });\n    //his.props.loginValidation(value);\n  }\n\n  validateField(e) {\n    //this.props.loginValidation(e.target.value);\n  }\n\n  logUserIn(e) {\n    e.preventDefault();\n    this.props.loguserin(this.props.login_input_data);\n  }\n\n  render() {\n    const { login_input_data, validation, auth, error } = this.props;\n    const { email, password } = login_input_data;\n    const { email: validEmail, validfield } = validation;\n    const { error: loginError } = error;\n    console.log(loginError);\n    if (auth) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Login</h2>\n        {loginError && <p className=\"tp-field-error\">{loginError}</p>}\n        <form onSubmit={this.logUserIn}>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is invalid</p>\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              required\n              className=\"tp-input-field\"\n              value={password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={false}>\n              Log in\n            </button>\n          </div>\n          <div>\n            <p>\n              <Link to=\"/auth/password-reset\" className=\"tp-forgot-password\">\n                Forgot Password\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    login_input_data: state.input.login,\n    validation: state.validation.login,\n    auth: state.auth.user,\n    error: state.error.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginInputAction: data => {\n      dispatch(loginInputAction(data));\n    },\n    loginValidation: data => {\n      dispatch(loginValidation(data));\n    },\n    loguserin: data => {\n      return dispatch(logUserIn(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { passwordResetInputAction } from \"../../store/actions/inputActions\";\nimport { passwordResetValidation } from \"../../store/actions/validationActins\";\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { id, value } = e.target;\n    this.props.passwordResetInputAction({ id, value });\n    this.props.passwordResetValidation(value);\n  }\n\n  validateField(e) {\n    this.props.passwordResetValidation(e.target.value);\n  }\n  render() {\n    const { validation, resetpassword_input_data } = this.props;\n    const { email } = resetpassword_input_data;\n    const { email: validEmail, validfield } = validation;\n    return (\n      <div className=\"tp-auth-container\">\n        <h2 className=\"tp-auth-title\">Password Reset</h2>\n        <form>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              id=\"email\"\n              required\n              className={`tp-input-field ${\n                validEmail ? \"\" : \"tp-invalid-field\"\n              }`}\n              value={email}\n              onChange={this.handleInputChange}\n              onBlur={this.validateField}\n            />\n            {!validEmail && (\n              <p className=\"tp-field-error\">* email is not valid</p>\n            )}\n          </div>\n          <div>\n            <button className=\"tp-auth-btn\" disabled={!validfield}>\n              Send reset link\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    resetpassword_input_data: state.input.resetpassword,\n    validation: state.validation.passwordreset\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    passwordResetInputAction: data => {\n      dispatch(passwordResetInputAction(data));\n    },\n    passwordResetValidation: data => {\n      dispatch(passwordResetValidation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <React.Fragment>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/login\">\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"tp-active-link-class\" exact to=\"/auth/signup\">\n          Signup\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/actions/authActions\";\n\nconst SignedInLink = ({ user, loguserout }) => {\n  return (\n    <React.Fragment>\n      <li>\n        <div className=\"tp-initials\">\n          <span>{user.username[0]}</span>\n        </div>\n      </li>\n      <li>\n        <a href=\"javascript:void(0)\" onClick={loguserout}>\n          logout\n        </a>\n      </li>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loguserout: e => {\n      e.preventDefault();\n      return dispatch(logout());\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLink);\n","import React from \"react\";\nimport SignoutLinks from \"./signoutlinks\";\nimport SignedInLink from \"./signinlinks\";\n\nconst Navigation = ({ user }) => {\n  console.log(user);\n  const link = user ? <SignedInLink user={user} /> : <SignoutLinks />;\n  return (\n    <nav className=\"tp-navigation\">\n      <a href=\"#default\" className=\"tp-brand\">\n        Topners\n      </a>\n      <ul>{link}</ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport \"./userstyle.css\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    //\n  }\n  render() {\n    let number = 500;\n    const { user } = this.props;\n    const { username, id } = user ? user : {};\n    console.log(user);\n    if (!user) {\n      return <Redirect to=\"/auth/login\" />;\n    } else {\n      return (\n        <div className=\"tp-main-container\">\n          <div className=\"tp-user-header\">\n            <h4>hi, {username}</h4>\n            <div>\n              <h4>&#8358;{number.toFixed(1)}</h4>\n              <button className=\"tp-top-up-account\">Deposit</button>\n            </div>\n          </div>\n          <div className=\"tp-question-container\">\n            <p className=\"tp-form-note\">\n              ! When you are signed up for a game, and question is available for\n              answering , it will appear here\n            </p>\n          </div>\n          <div className=\"tp-card-container\">\n            <div className=\"tp-card\">\n              <div className=\"tp-card-top\">\n                <h1>Bronze</h1>\n              </div>\n              <div className=\"tp-card-bottom\">\n                <div className=\"tp-entrance-fee\">\n                  <h4>Entrance fee</h4>\n                  <h4>&#8358;100</h4>\n                </div>\n                <div className=\"tp-possible-win\">\n                  <h4>Win</h4>\n                  <h4>upto 100k</h4>\n                </div>\n                <div className=\"tp-enter-context\">\n                  <button className=\"tp-enter-context-btn\">Enter bronze</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"tp-loader-container\">\n      <h1>Hold on hoss checking authentication status</h1>\n      <p>Wait a little bit......</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/signup\";\nimport Login from \"./components/auth/login\";\nimport ResetPassword from \"./components/auth/resetpassword\";\nimport Navigation from \"./components/layout/navigation\";\nimport Dashboard from \"./components/User/dashboard\";\nimport { connect } from \"react-redux\";\nimport Loader from \"./components/layout/loading\";\n\nfunction App({ loading, user }) {\n  if (loading) {\n    return <Loader />;\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navigation user={user} />\n          <Switch>\n            <Route path=\"/auth/signup\" exact component={Signup} />\n            <Route path=\"/auth/login\" exact component={Login} />\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n            <Route\n              path=\"/auth/password-reset\"\n              exact\n              component={ResetPassword}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  login: {\n    email: \"odiagbesamsonosaro@gmail.com\",\n    password: \"Samsonosaro$1\"\n  },\n  resetpassword: {\n    email: \"\"\n  },\n\n  signup: {\n    name: \"Odiagbe Samson\",\n    email: \"\",\n    username: \"\",\n    bank: \"Select your bank\",\n    account_number: \"\",\n    password: \"Samson1@\",\n    confirm_password: \"Samson1@\"\n  }\n};\n\nconst inputReducer = (state = initState, action) => {\n  const { id, value } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"LOGIN_INPUT\":\n      let login = { ...state.login, [id]: value };\n      state = { ...state, login };\n      break;\n    case \"SIGNUP_INPUT\":\n      let signup = { ...state.signup, [id]: value };\n      state = { ...state, signup };\n      break;\n    case \"PASSWORD_RESET_INPUT\":\n      let resetpassword = { ...state.resetpassword, [id]: value };\n      state = { ...state, resetpassword };\n      break;\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default inputReducer;\n","const initState = {\n  signup: {\n    name: true,\n    email: true,\n    password: true,\n    bank: true,\n    account_number: true,\n    confirm_password: true,\n    username: true,\n    validField: [false, false, false, false, false, false, false]\n  },\n  login: {\n    email: true,\n    validfield: false\n  },\n\n  passwordreset: {\n    email: true,\n    validfield: false\n  }\n};\n\nconst validationReducer = (state = initState, action) => {\n  const { id, valid, index } = action.payload ? action.payload : {};\n\n  switch (action.type) {\n    case \"SIGNUP-VALIDATION\":\n      let checkFields = state.signup.validField;\n      checkFields[index] = valid;\n      let signup = {\n        ...state.signup,\n        [id]: valid,\n        validField: checkFields\n      };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-VALIDATION\":\n      let login = { ...state.login, email: valid, validfield: valid };\n      state = { ...state, login };\n      break;\n    case \"PASSWORD-RESET-VALIDATION\":\n      let passwordreset = {\n        ...state.passwordreset,\n        email: valid,\n        validfield: valid\n      };\n      state = { ...state, passwordreset };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default validationReducer;\n","const initState = {\n  signup: {\n    error: null,\n    success: null\n  },\n\n  login: {\n    error: null\n  }\n};\n\nconst errorReducer = (state = initState, action) => {\n  const { error, success } = action.payload || {};\n  switch (action.type) {\n    case \"SIGNUP-ERROR\":\n      const signup = { error, success };\n      state = { ...state, signup };\n      break;\n    case \"LOGIN-ERROR\":\n      console.log(error);\n      const login = { error };\n      state = { ...state, login };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default errorReducer;\n","const initState = {\n  loading: true,\n  user: null\n};\n\nconst authReducer = (state = initState, action) => {\n  // console.log(\"payload: \", action);\n  const { loading, user } = action.payload ? action.payload : {};\n  switch (action.type) {\n    case \"AUTHENTICATION-END\":\n      state = { ...state, loading, user };\n      break;\n    case \"SET-ACTIVE-USER\":\n      console.log(user);\n      state = { ...state, user };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default authReducer;\n","import { combineReducers } from \"redux\";\nimport inputReducer from \"./reducers/inputReducer\";\nimport validationReducer from \"./reducers/validationReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\nimport authReducer from \"./reducers/authReducer\";\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  validation: validationReducer,\n  error: errorReducer,\n  auth: authReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/index\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { verifyAuthentication } from \"./store/actions/authActions\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n// somehow check if the user is logged in\nstore.dispatch(verifyAuthentication());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}